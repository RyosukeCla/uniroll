// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`build nested with skypack 1`] = `
"var n, u, i, t, o, f = {}, e = [], c = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;
function s(n2, l2) {
  for (var u2 in l2)
    n2[u2] = l2[u2];
  return n2;
}
function a(n2) {
  var l2 = n2.parentNode;
  l2 && l2.removeChild(n2);
}
function v(n2, l2, u2) {
  var i2, t2 = arguments, r2 = {};
  for (i2 in l2)
    i2 !== \\"key\\" && i2 !== \\"ref\\" && (r2[i2] = l2[i2]);
  if (arguments.length > 3)
    for (u2 = [u2], i2 = 3; i2 < arguments.length; i2++)
      u2.push(t2[i2]);
  if (u2 != null && (r2.children = u2), typeof n2 == \\"function\\" && n2.defaultProps != null)
    for (i2 in n2.defaultProps)
      r2[i2] === void 0 && (r2[i2] = n2.defaultProps[i2]);
  return h(n2, r2, l2 && l2.key, l2 && l2.ref, null);
}
function h(l2, u2, i2, t2, r2) {
  var o2 = {type: l2, props: u2, key: i2, ref: t2, __k: null, __: null, __b: 0, __e: null, __d: void 0, __c: null, constructor: void 0, __v: r2};
  return r2 == null && (o2.__v = o2), n.vnode && n.vnode(o2), o2;
}
function p(n2) {
  return n2.children;
}
function d(n2, l2) {
  this.props = n2, this.context = l2;
}
function _(n2, l2) {
  if (l2 == null)
    return n2.__ ? _(n2.__, n2.__.__k.indexOf(n2) + 1) : null;
  for (var u2; l2 < n2.__k.length; l2++)
    if ((u2 = n2.__k[l2]) != null && u2.__e != null)
      return u2.__e;
  return typeof n2.type == \\"function\\" ? _(n2) : null;
}
function k(n2) {
  var l2, u2;
  if ((n2 = n2.__) != null && n2.__c != null) {
    for (n2.__e = n2.__c.base = null, l2 = 0; l2 < n2.__k.length; l2++)
      if ((u2 = n2.__k[l2]) != null && u2.__e != null) {
        n2.__e = n2.__c.base = u2.__e;
        break;
      }
    return k(n2);
  }
}
function w(l2) {
  (!l2.__d && (l2.__d = true) && u.push(l2) && !m.__r++ || t !== n.debounceRendering) && ((t = n.debounceRendering) || i)(m);
}
function m() {
  for (var n2; m.__r = u.length; )
    n2 = u.sort(function(n3, l2) {
      return n3.__v.__b - l2.__v.__b;
    }), u = [], n2.some(function(n3) {
      var l2, u2, i2, t2, r2, o2, f2;
      n3.__d && (o2 = (r2 = (l2 = n3).__v).__e, (f2 = l2.__P) && (u2 = [], (i2 = s({}, r2)).__v = i2, t2 = T(f2, r2, i2, l2.__n, f2.ownerSVGElement !== void 0, null, u2, o2 == null ? _(r2) : o2), $(u2, r2), t2 != o2 && k(r2)));
    });
}
function g(n2, l2, u2, i2, t2, r2, o2, c2, s2, v2) {
  var y2, d2, k2, w2, m2, g2, b2, A2 = i2 && i2.__k || e, P2 = A2.length;
  for (s2 == f && (s2 = o2 != null ? o2[0] : P2 ? _(i2, 0) : null), u2.__k = [], y2 = 0; y2 < l2.length; y2++)
    if ((w2 = u2.__k[y2] = (w2 = l2[y2]) == null || typeof w2 == \\"boolean\\" ? null : typeof w2 == \\"string\\" || typeof w2 == \\"number\\" ? h(null, w2, null, null, w2) : Array.isArray(w2) ? h(p, {children: w2}, null, null, null) : w2.__e != null || w2.__c != null ? h(w2.type, w2.props, w2.key, null, w2.__v) : w2) != null) {
      if (w2.__ = u2, w2.__b = u2.__b + 1, (k2 = A2[y2]) === null || k2 && w2.key == k2.key && w2.type === k2.type)
        A2[y2] = void 0;
      else
        for (d2 = 0; d2 < P2; d2++) {
          if ((k2 = A2[d2]) && w2.key == k2.key && w2.type === k2.type) {
            A2[d2] = void 0;
            break;
          }
          k2 = null;
        }
      m2 = T(n2, w2, k2 = k2 || f, t2, r2, o2, c2, s2, v2), (d2 = w2.ref) && k2.ref != d2 && (b2 || (b2 = []), k2.ref && b2.push(k2.ref, null, w2), b2.push(d2, w2.__c || m2, w2)), m2 != null ? (g2 == null && (g2 = m2), s2 = x(n2, w2, k2, A2, o2, m2, s2), u2.type == \\"option\\" ? n2.value = \\"\\" : typeof u2.type == \\"function\\" && (u2.__d = s2)) : s2 && k2.__e == s2 && s2.parentNode != n2 && (s2 = _(k2));
    }
  if (u2.__e = g2, o2 != null && typeof u2.type != \\"function\\")
    for (y2 = o2.length; y2--; )
      o2[y2] != null && a(o2[y2]);
  for (y2 = P2; y2--; )
    A2[y2] != null && I(A2[y2], A2[y2]);
  if (b2)
    for (y2 = 0; y2 < b2.length; y2++)
      H(b2[y2], b2[++y2], b2[++y2]);
}
function x(n2, l2, u2, i2, t2, r2, o2) {
  var f2, e2, c2;
  if (l2.__d !== void 0)
    f2 = l2.__d, l2.__d = void 0;
  else if (t2 == u2 || r2 != o2 || r2.parentNode == null)
    n:
      if (o2 == null || o2.parentNode !== n2)
        n2.appendChild(r2), f2 = null;
      else {
        for (e2 = o2, c2 = 0; (e2 = e2.nextSibling) && c2 < i2.length; c2 += 2)
          if (e2 == r2)
            break n;
        n2.insertBefore(r2, o2), f2 = o2;
      }
  return f2 !== void 0 ? f2 : r2.nextSibling;
}
function A(n2, l2, u2, i2, t2) {
  var r2;
  for (r2 in u2)
    r2 === \\"children\\" || r2 === \\"key\\" || r2 in l2 || C(n2, r2, null, u2[r2], i2);
  for (r2 in l2)
    t2 && typeof l2[r2] != \\"function\\" || r2 === \\"children\\" || r2 === \\"key\\" || r2 === \\"value\\" || r2 === \\"checked\\" || u2[r2] === l2[r2] || C(n2, r2, l2[r2], u2[r2], i2);
}
function P(n2, l2, u2) {
  l2[0] === \\"-\\" ? n2.setProperty(l2, u2) : n2[l2] = typeof u2 == \\"number\\" && c.test(l2) === false ? u2 + \\"px\\" : u2 == null ? \\"\\" : u2;
}
function C(n2, l2, u2, i2, t2) {
  var r2, o2, f2, e2, c2;
  if (t2 ? l2 === \\"className\\" && (l2 = \\"class\\") : l2 === \\"class\\" && (l2 = \\"className\\"), l2 === \\"style\\")
    if (r2 = n2.style, typeof u2 == \\"string\\")
      r2.cssText = u2;
    else {
      if (typeof i2 == \\"string\\" && (r2.cssText = \\"\\", i2 = null), i2)
        for (e2 in i2)
          u2 && e2 in u2 || P(r2, e2, \\"\\");
      if (u2)
        for (c2 in u2)
          i2 && u2[c2] === i2[c2] || P(r2, c2, u2[c2]);
    }
  else
    l2[0] === \\"o\\" && l2[1] === \\"n\\" ? (o2 = l2 !== (l2 = l2.replace(/Capture$/, \\"\\")), f2 = l2.toLowerCase(), l2 = (f2 in n2 ? f2 : l2).slice(2), u2 ? (i2 || n2.addEventListener(l2, N, o2), (n2.l || (n2.l = {}))[l2] = u2) : n2.removeEventListener(l2, N, o2)) : l2 !== \\"list\\" && l2 !== \\"tagName\\" && l2 !== \\"form\\" && l2 !== \\"type\\" && l2 !== \\"size\\" && !t2 && l2 in n2 ? n2[l2] = u2 == null ? \\"\\" : u2 : typeof u2 != \\"function\\" && l2 !== \\"dangerouslySetInnerHTML\\" && (l2 !== (l2 = l2.replace(/^xlink:?/, \\"\\")) ? u2 == null || u2 === false ? n2.removeAttributeNS(\\"http://www.w3.org/1999/xlink\\", l2.toLowerCase()) : n2.setAttributeNS(\\"http://www.w3.org/1999/xlink\\", l2.toLowerCase(), u2) : u2 == null || u2 === false && !/^ar/.test(l2) ? n2.removeAttribute(l2) : n2.setAttribute(l2, u2));
}
function N(l2) {
  this.l[l2.type](n.event ? n.event(l2) : l2);
}
function z(n2, l2, u2) {
  var i2, t2;
  for (i2 = 0; i2 < n2.__k.length; i2++)
    (t2 = n2.__k[i2]) && (t2.__ = n2, t2.__e && (typeof t2.type == \\"function\\" && t2.__k.length > 1 && z(t2, l2, u2), l2 = x(u2, t2, t2, n2.__k, null, t2.__e, l2), typeof n2.type == \\"function\\" && (n2.__d = l2)));
}
function T(l2, u2, i2, t2, r2, o2, f2, e2, c2) {
  var a2, v2, h2, y2, _2, k2, w2, m2, b2, x2, A2, P2 = u2.type;
  if (u2.constructor !== void 0)
    return null;
  (a2 = n.__b) && a2(u2);
  try {
    n:
      if (typeof P2 == \\"function\\") {
        if (m2 = u2.props, b2 = (a2 = P2.contextType) && t2[a2.__c], x2 = a2 ? b2 ? b2.props.value : a2.__ : t2, i2.__c ? w2 = (v2 = u2.__c = i2.__c).__ = v2.__E : (\\"prototype\\" in P2 && P2.prototype.render ? u2.__c = v2 = new P2(m2, x2) : (u2.__c = v2 = new d(m2, x2), v2.constructor = P2, v2.render = L), b2 && b2.sub(v2), v2.props = m2, v2.state || (v2.state = {}), v2.context = x2, v2.__n = t2, h2 = v2.__d = true, v2.__h = []), v2.__s == null && (v2.__s = v2.state), P2.getDerivedStateFromProps != null && (v2.__s == v2.state && (v2.__s = s({}, v2.__s)), s(v2.__s, P2.getDerivedStateFromProps(m2, v2.__s))), y2 = v2.props, _2 = v2.state, h2)
          P2.getDerivedStateFromProps == null && v2.componentWillMount != null && v2.componentWillMount(), v2.componentDidMount != null && v2.__h.push(v2.componentDidMount);
        else {
          if (P2.getDerivedStateFromProps == null && m2 !== y2 && v2.componentWillReceiveProps != null && v2.componentWillReceiveProps(m2, x2), !v2.__e && v2.shouldComponentUpdate != null && v2.shouldComponentUpdate(m2, v2.__s, x2) === false || u2.__v === i2.__v) {
            v2.props = m2, v2.state = v2.__s, u2.__v !== i2.__v && (v2.__d = false), v2.__v = u2, u2.__e = i2.__e, u2.__k = i2.__k, v2.__h.length && f2.push(v2), z(u2, e2, l2);
            break n;
          }
          v2.componentWillUpdate != null && v2.componentWillUpdate(m2, v2.__s, x2), v2.componentDidUpdate != null && v2.__h.push(function() {
            v2.componentDidUpdate(y2, _2, k2);
          });
        }
        v2.context = x2, v2.props = m2, v2.state = v2.__s, (a2 = n.__r) && a2(u2), v2.__d = false, v2.__v = u2, v2.__P = l2, a2 = v2.render(v2.props, v2.state, v2.context), v2.state = v2.__s, v2.getChildContext != null && (t2 = s(s({}, t2), v2.getChildContext())), h2 || v2.getSnapshotBeforeUpdate == null || (k2 = v2.getSnapshotBeforeUpdate(y2, _2)), A2 = a2 != null && a2.type == p && a2.key == null ? a2.props.children : a2, g(l2, Array.isArray(A2) ? A2 : [A2], u2, i2, t2, r2, o2, f2, e2, c2), v2.base = u2.__e, v2.__h.length && f2.push(v2), w2 && (v2.__E = v2.__ = null), v2.__e = false;
      } else
        o2 == null && u2.__v === i2.__v ? (u2.__k = i2.__k, u2.__e = i2.__e) : u2.__e = j(i2.__e, u2, i2, t2, r2, o2, f2, c2);
    (a2 = n.diffed) && a2(u2);
  } catch (l3) {
    u2.__v = null, n.__e(l3, u2, i2);
  }
  return u2.__e;
}
function $(l2, u2) {
  n.__c && n.__c(u2, l2), l2.some(function(u3) {
    try {
      l2 = u3.__h, u3.__h = [], l2.some(function(n2) {
        n2.call(u3);
      });
    } catch (l3) {
      n.__e(l3, u3.__v);
    }
  });
}
function j(n2, l2, u2, i2, t2, r2, o2, c2) {
  var s2, a2, v2, h2, y2, p2 = u2.props, d2 = l2.props;
  if (t2 = l2.type === \\"svg\\" || t2, r2 != null) {
    for (s2 = 0; s2 < r2.length; s2++)
      if ((a2 = r2[s2]) != null && ((l2.type === null ? a2.nodeType === 3 : a2.localName === l2.type) || n2 == a2)) {
        n2 = a2, r2[s2] = null;
        break;
      }
  }
  if (n2 == null) {
    if (l2.type === null)
      return document.createTextNode(d2);
    n2 = t2 ? document.createElementNS(\\"http://www.w3.org/2000/svg\\", l2.type) : document.createElement(l2.type, d2.is && {is: d2.is}), r2 = null, c2 = false;
  }
  if (l2.type === null)
    p2 !== d2 && n2.data != d2 && (n2.data = d2);
  else {
    if (r2 != null && (r2 = e.slice.call(n2.childNodes)), v2 = (p2 = u2.props || f).dangerouslySetInnerHTML, h2 = d2.dangerouslySetInnerHTML, !c2) {
      if (r2 != null)
        for (p2 = {}, y2 = 0; y2 < n2.attributes.length; y2++)
          p2[n2.attributes[y2].name] = n2.attributes[y2].value;
      (h2 || v2) && (h2 && v2 && h2.__html == v2.__html || (n2.innerHTML = h2 && h2.__html || \\"\\"));
    }
    A(n2, d2, p2, t2, c2), h2 ? l2.__k = [] : (s2 = l2.props.children, g(n2, Array.isArray(s2) ? s2 : [s2], l2, u2, i2, l2.type !== \\"foreignObject\\" && t2, r2, o2, f, c2)), c2 || (\\"value\\" in d2 && (s2 = d2.value) !== void 0 && s2 !== n2.value && C(n2, \\"value\\", s2, p2.value, false), \\"checked\\" in d2 && (s2 = d2.checked) !== void 0 && s2 !== n2.checked && C(n2, \\"checked\\", s2, p2.checked, false));
  }
  return n2;
}
function H(l2, u2, i2) {
  try {
    typeof l2 == \\"function\\" ? l2(u2) : l2.current = u2;
  } catch (l3) {
    n.__e(l3, i2);
  }
}
function I(l2, u2, i2) {
  var t2, r2, o2;
  if (n.unmount && n.unmount(l2), (t2 = l2.ref) && (t2.current && t2.current !== l2.__e || H(t2, null, u2)), i2 || typeof l2.type == \\"function\\" || (i2 = (r2 = l2.__e) != null), l2.__e = l2.__d = void 0, (t2 = l2.__c) != null) {
    if (t2.componentWillUnmount)
      try {
        t2.componentWillUnmount();
      } catch (l3) {
        n.__e(l3, u2);
      }
    t2.base = t2.__P = null;
  }
  if (t2 = l2.__k)
    for (o2 = 0; o2 < t2.length; o2++)
      t2[o2] && I(t2[o2], u2, i2);
  r2 != null && a(r2);
}
function L(n2, l2, u2) {
  return this.constructor(n2, u2);
}
n = {__e: function(n2, l2) {
  for (var u2, i2; l2 = l2.__; )
    if ((u2 = l2.__c) && !u2.__)
      try {
        if (u2.constructor && u2.constructor.getDerivedStateFromError != null && (i2 = true, u2.setState(u2.constructor.getDerivedStateFromError(n2))), u2.componentDidCatch != null && (i2 = true, u2.componentDidCatch(n2)), i2)
          return w(u2.__E = u2);
      } catch (l3) {
        n2 = l3;
      }
  throw n2;
}}, d.prototype.setState = function(n2, l2) {
  var u2;
  u2 = this.__s !== this.state ? this.__s : this.__s = s({}, this.state), typeof n2 == \\"function\\" && (n2 = n2(u2, this.props)), n2 && s(u2, n2), n2 != null && this.__v && (l2 && this.__h.push(l2), w(this));
}, d.prototype.forceUpdate = function(n2) {
  this.__v && (this.__e = true, n2 && this.__h.push(n2), w(this));
}, d.prototype.render = p, u = [], i = typeof Promise == \\"function\\" ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, m.__r = 0, o = 0;

var t$1, u$1, r, o$1 = 0, i$1 = [], c$1 = n.__r, f$1 = n.diffed, e$1 = n.__c, a$1 = n.unmount;
function v$1(t2, r2) {
  n.__h && n.__h(u$1, t2, o$1 || r2), o$1 = 0;
  var i2 = u$1.__H || (u$1.__H = {__: [], __h: []});
  return t2 >= i2.__.length && i2.__.push({}), i2.__[t2];
}
function y(r2, o2) {
  var i2 = v$1(t$1++, 3);
  !n.__s && j$1(i2.__H, o2) && (i2.__ = r2, i2.__H = o2, u$1.__H.__h.push(i2));
}
function q() {
  i$1.some(function(t2) {
    if (t2.__P)
      try {
        t2.__H.__h.forEach(b), t2.__H.__h.forEach(g$1), t2.__H.__h = [];
      } catch (u2) {
        return t2.__H.__h = [], n.__e(u2, t2.__v), true;
      }
  }), i$1 = [];
}
n.__r = function(n2) {
  c$1 && c$1(n2), t$1 = 0;
  var r2 = (u$1 = n2.__c).__H;
  r2 && (r2.__h.forEach(b), r2.__h.forEach(g$1), r2.__h = []);
}, n.diffed = function(t2) {
  f$1 && f$1(t2);
  var u2 = t2.__c;
  u2 && u2.__H && u2.__H.__h.length && (i$1.push(u2) !== 1 && r === n.requestAnimationFrame || ((r = n.requestAnimationFrame) || function(n2) {
    var t3, u3 = function() {
      clearTimeout(r2), x$1 && cancelAnimationFrame(t3), setTimeout(n2);
    }, r2 = setTimeout(u3, 100);
    x$1 && (t3 = requestAnimationFrame(u3));
  })(q));
}, n.__c = function(t2, u2) {
  u2.some(function(t3) {
    try {
      t3.__h.forEach(b), t3.__h = t3.__h.filter(function(n2) {
        return !n2.__ || g$1(n2);
      });
    } catch (r2) {
      u2.some(function(n2) {
        n2.__h && (n2.__h = []);
      }), u2 = [], n.__e(r2, t3.__v);
    }
  }), e$1 && e$1(t2, u2);
}, n.unmount = function(t2) {
  a$1 && a$1(t2);
  var u2 = t2.__c;
  if (u2 && u2.__H)
    try {
      u2.__H.__.forEach(b);
    } catch (t3) {
      n.__e(t3, u2.__v);
    }
};
var x$1 = typeof requestAnimationFrame == \\"function\\";
function b(n2) {
  typeof n2.u == \\"function\\" && n2.u();
}
function g$1(n2) {
  n2.u = n2.__();
}
function j$1(n2, t2) {
  return !n2 || t2.some(function(t3, u2) {
    return t3 !== n2[u2];
  });
}

function App() {
      y(() => {
        console.log(\\"effect\\");
      }, []);
      return v(\\"div\\");
    }

    console.log(App);
"
`;

exports[`build with esm.sh 1`] = `
"var a,F,O;function I(t,e,n){var r,l,_,i=arguments,c={};for(_ in e)_==\\"key\\"?r=e[_]:_==\\"ref\\"?l=e[_]:c[_]=e[_];if(arguments.length>3)for(n=[n],_=3;_<arguments.length;_++)n.push(i[_]);if(n!=null&&(c.children=n),typeof t==\\"function\\"&&t.defaultProps!=null)for(_ in t.defaultProps)c[_]===void 0&&(c[_]=t.defaultProps[_]);return P(t,c,r,l,null)}function P(t,e,n,r,l){var _={type:t,props:e,key:n,ref:r,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:l??++a.__v};return a.vnode!=null&&a.vnode(_),_}a={__e:function(t,e){for(var n,r,l,_=e.__h;e=e.__;)if((n=e.__c)&&!n.__)try{if((r=n.constructor)&&r.getDerivedStateFromError!=null&&(n.setState(r.getDerivedStateFromError(t)),l=n.__d),n.componentDidCatch!=null&&(n.componentDidCatch(t),l=n.__d),l)return e.__h=_,n.__E=n}catch(i){t=i;}throw t},__v:0},F=typeof Promise==\\"function\\"?Promise.prototype.then.bind(Promise.resolve()):setTimeout,O=0;

console.log(I);
"
`;

exports[`build with fallback 1`] = `
"function notImplemented(msg){const message=msg?\`Not implemented: \${msg}\`:\\"Not implemented\\";throw new Error(message);}
function intoCallbackAPIWithIntercept(func,interceptor,cb,...args){func(...args).then((value)=>cb&&cb(null,interceptor(value))).catch((err)=>cb&&cb(err,null));}
function normalizeEncoding(enc){if(enc==null||enc===\\"utf8\\"||enc===\\"utf-8\\")return \\"utf8\\";return slowCases(enc);}
function slowCases(enc){switch(enc.length){case 4:if(enc===\\"UTF8\\")return \\"utf8\\";if(enc===\\"ucs2\\"||enc===\\"UCS2\\")return \\"utf16le\\";enc=\`\${enc}\`.toLowerCase();if(enc===\\"utf8\\")return \\"utf8\\";if(enc===\\"ucs2\\")return \\"utf16le\\";break;case 3:if(enc===\\"hex\\"||enc===\\"HEX\\"||\`\${enc}\`.toLowerCase()===\\"hex\\"){return \\"hex\\";}
break;case 5:if(enc===\\"ascii\\")return \\"ascii\\";if(enc===\\"ucs-2\\")return \\"utf16le\\";if(enc===\\"UTF-8\\")return \\"utf8\\";if(enc===\\"ASCII\\")return \\"ascii\\";if(enc===\\"UCS-2\\")return \\"utf16le\\";enc=\`\${enc}\`.toLowerCase();if(enc===\\"utf-8\\")return \\"utf8\\";if(enc===\\"ascii\\")return \\"ascii\\";if(enc===\\"ucs-2\\")return \\"utf16le\\";break;case 6:if(enc===\\"base64\\")return \\"base64\\";if(enc===\\"latin1\\"||enc===\\"binary\\")return \\"latin1\\";if(enc===\\"BASE64\\")return \\"base64\\";if(enc===\\"LATIN1\\"||enc===\\"BINARY\\")return \\"latin1\\";enc=\`\${enc}\`.toLowerCase();if(enc===\\"base64\\")return \\"base64\\";if(enc===\\"latin1\\"||enc===\\"binary\\")return \\"latin1\\";break;case 7:if(enc===\\"utf16le\\"||enc===\\"UTF16LE\\"||\`\${enc}\`.toLowerCase()===\\"utf16le\\"){return \\"utf16le\\";}
break;case 8:if(enc===\\"utf-16le\\"||enc===\\"UTF-16LE\\"||\`\${enc}\`.toLowerCase()===\\"utf-16le\\"){return \\"utf16le\\";}
break;default:if(enc===\\"\\")return \\"utf8\\";}}
function validateIntegerRange(value,name,min=-2147483648,max=2147483647){if(!Number.isInteger(value)){throw new Error(\`\${name} must be 'an integer' but was \${value}\`);}
if(value<min||value>max){throw new Error(\`\${name} must be >= \${min} && <= \${max}. Value was \${value}\`);}}
function access(_path,_modeOrCallback,_callback){notImplemented(\\"Not yet available\\");}
function accessSync(path,mode){notImplemented(\\"Not yet available\\");}
function isFileOptions(fileOptions){if(!fileOptions)return false;return fileOptions.encoding!=undefined||fileOptions.flag!=undefined||fileOptions.mode!=undefined;}
function getEncoding(optOrCallback){if(!optOrCallback||typeof optOrCallback===\\"function\\"){return null;}
const encoding=typeof optOrCallback===\\"string\\"?optOrCallback:optOrCallback.encoding;if(!encoding)return null;return encoding;}
function checkEncoding(encoding){if(!encoding)return null;encoding=encoding.toLowerCase();if([\\"utf8\\",\\"hex\\",\\"base64\\"].includes(encoding))return encoding;if(encoding===\\"utf-8\\"){return \\"utf8\\";}
if(encoding===\\"binary\\"){return \\"binary\\";}
const notImplementedEncodings=[\\"utf16le\\",\\"latin1\\",\\"ascii\\",\\"ucs2\\"];if(notImplementedEncodings.includes(encoding)){notImplemented(\`\\"\${encoding}\\" encoding\`);}
throw new Error(\`The value \\"\${encoding}\\" is invalid for option \\"encoding\\"\`);}
function getOpenOptions(flag){if(!flag){return {create:true,append:true};}
let openOptions;switch(flag){case \\"a\\":{openOptions={create:true,append:true};break;}
case \\"ax\\":{openOptions={createNew:true,write:true,append:true};break;}
case \\"a+\\":{openOptions={read:true,create:true,append:true};break;}
case \\"ax+\\":{openOptions={read:true,createNew:true,append:true};break;}
case \\"r\\":{openOptions={read:true};break;}
case \\"r+\\":{openOptions={read:true,write:true};break;}
case \\"w\\":{openOptions={create:true,write:true,truncate:true};break;}
case \\"wx\\":{openOptions={createNew:true,write:true};break;}
case \\"w+\\":{openOptions={create:true,write:true,truncate:true,read:true};break;}
case \\"wx+\\":{openOptions={createNew:true,write:true,read:true};break;}
case \\"as\\":{openOptions={create:true,append:true};break;}
case \\"as+\\":{openOptions={create:true,read:true,append:true};break;}
case \\"rs+\\":{openOptions={create:true,read:true,write:true};break;}
default:{throw new Error(\`Unrecognized file system flag: \${flag}\`);}}
return openOptions;}
const CHAR_UPPERCASE_A=65;const CHAR_UPPERCASE_Z=90;const CHAR_LOWERCASE_Z=122;const CHAR_DOT=46;const CHAR_FORWARD_SLASH=47;const CHAR_BACKWARD_SLASH=92;const CHAR_COLON=58;let NATIVE_OS=\\"linux\\";const navigator=globalThis.navigator;if(globalThis.Deno!=null){NATIVE_OS=Deno.build.os;}else if(navigator?.appVersion?.includes?.(\\"Win\\")??false){NATIVE_OS=\\"windows\\";}
const isWindows=NATIVE_OS==\\"windows\\";function assert(expr,msg=\\"\\"){if(!expr){throw new DenoStdInternalError(msg);}}
const _win32=function(){const sep=\\"\\\\\\\\\\";const delimiter=\\";\\";function resolve(...pathSegments){let resolvedDevice=\\"\\";let resolvedTail=\\"\\";let resolvedAbsolute=false;for(let i=pathSegments.length-1;i>=-1;i--){let path;if(i>=0){path=pathSegments[i];}else if(!resolvedDevice){if(globalThis.Deno==null){throw new TypeError(\\"Resolved a drive-letter-less path without a CWD.\\");}
path=Deno.cwd();}else {if(globalThis.Deno==null){throw new TypeError(\\"Resolved a relative path without a CWD.\\");}
path=Deno.env.get(\`=\${resolvedDevice}\`)||Deno.cwd();if(path===undefined||path.slice(0,3).toLowerCase()!==\`\${resolvedDevice.toLowerCase()}\\\\\\\\\`){path=\`\${resolvedDevice}\\\\\\\\\`;}}
assertPath(path);const len=path.length;if(len===0)continue;let rootEnd=0;let device=\\"\\";let isAbsolute=false;const code=path.charCodeAt(0);if(len>1){if(isPathSeparator(code)){isAbsolute=true;if(isPathSeparator(path.charCodeAt(1))){let j=2;let last=j;for(;j<len;++j){if(isPathSeparator(path.charCodeAt(j)))break;}
if(j<len&&j!==last){const firstPart=path.slice(last,j);last=j;for(;j<len;++j){if(!isPathSeparator(path.charCodeAt(j)))break;}
if(j<len&&j!==last){last=j;for(;j<len;++j){if(isPathSeparator(path.charCodeAt(j)))break;}
if(j===len){device=\`\\\\\\\\\\\\\\\\\${firstPart}\\\\\\\\\${path.slice(last)}\`;rootEnd=j;}else if(j!==last){device=\`\\\\\\\\\\\\\\\\\${firstPart}\\\\\\\\\${path.slice(last,j)}\`;rootEnd=j;}}}}else {rootEnd=1;}}else if(isWindowsDeviceRoot(code)){if(path.charCodeAt(1)===58){device=path.slice(0,2);rootEnd=2;if(len>2){if(isPathSeparator(path.charCodeAt(2))){isAbsolute=true;rootEnd=3;}}}}}else if(isPathSeparator(code)){rootEnd=1;isAbsolute=true;}
if(device.length>0&&resolvedDevice.length>0&&device.toLowerCase()!==resolvedDevice.toLowerCase()){continue;}
if(resolvedDevice.length===0&&device.length>0){resolvedDevice=device;}
if(!resolvedAbsolute){resolvedTail=\`\${path.slice(rootEnd)}\\\\\\\\\${resolvedTail}\`;resolvedAbsolute=isAbsolute;}
if(resolvedAbsolute&&resolvedDevice.length>0)break;}
resolvedTail=normalizeString(resolvedTail,!resolvedAbsolute,\\"\\\\\\\\\\",isPathSeparator);return resolvedDevice+(resolvedAbsolute?\\"\\\\\\\\\\":\\"\\")+resolvedTail||\\".\\";}
function normalize(path){assertPath(path);const len=path.length;if(len===0)return \\".\\";let rootEnd=0;let device;let isAbsolute=false;const code=path.charCodeAt(0);if(len>1){if(isPathSeparator(code)){isAbsolute=true;if(isPathSeparator(path.charCodeAt(1))){let j=2;let last=j;for(;j<len;++j){if(isPathSeparator(path.charCodeAt(j)))break;}
if(j<len&&j!==last){const firstPart=path.slice(last,j);last=j;for(;j<len;++j){if(!isPathSeparator(path.charCodeAt(j)))break;}
if(j<len&&j!==last){last=j;for(;j<len;++j){if(isPathSeparator(path.charCodeAt(j)))break;}
if(j===len){return \`\\\\\\\\\\\\\\\\\${firstPart}\\\\\\\\\${path.slice(last)}\\\\\\\\\`;}else if(j!==last){device=\`\\\\\\\\\\\\\\\\\${firstPart}\\\\\\\\\${path.slice(last,j)}\`;rootEnd=j;}}}}else {rootEnd=1;}}else if(isWindowsDeviceRoot(code)){if(path.charCodeAt(1)===58){device=path.slice(0,2);rootEnd=2;if(len>2){if(isPathSeparator(path.charCodeAt(2))){isAbsolute=true;rootEnd=3;}}}}}else if(isPathSeparator(code)){return \\"\\\\\\\\\\";}
let tail;if(rootEnd<len){tail=normalizeString(path.slice(rootEnd),!isAbsolute,\\"\\\\\\\\\\",isPathSeparator);}else {tail=\\"\\";}
if(tail.length===0&&!isAbsolute)tail=\\".\\";if(tail.length>0&&isPathSeparator(path.charCodeAt(len-1))){tail+=\\"\\\\\\\\\\";}
if(device===undefined){if(isAbsolute){if(tail.length>0)return \`\\\\\\\\\${tail}\`;else return \\"\\\\\\\\\\";}else if(tail.length>0){return tail;}else {return \\"\\";}}else if(isAbsolute){if(tail.length>0)return \`\${device}\\\\\\\\\${tail}\`;else return \`\${device}\\\\\\\\\`;}else if(tail.length>0){return device+tail;}else {return device;}}
function isAbsolute(path){assertPath(path);const len=path.length;if(len===0)return false;const code=path.charCodeAt(0);if(isPathSeparator(code)){return true;}else if(isWindowsDeviceRoot(code)){if(len>2&&path.charCodeAt(1)===CHAR_COLON){if(isPathSeparator(path.charCodeAt(2)))return true;}}
return false;}
function join(...paths){const pathsCount=paths.length;if(pathsCount===0)return \\".\\";let joined;let firstPart=null;for(let i=0;i<pathsCount;++i){const path=paths[i];assertPath(path);if(path.length>0){if(joined===undefined)joined=firstPart=path;else joined+=\`\\\\\\\\\${path}\`;}}
if(joined===undefined)return \\".\\";let needsReplace=true;let slashCount=0;assert(firstPart!=null);if(isPathSeparator(firstPart.charCodeAt(0))){++slashCount;const firstLen=firstPart.length;if(firstLen>1){if(isPathSeparator(firstPart.charCodeAt(1))){++slashCount;if(firstLen>2){if(isPathSeparator(firstPart.charCodeAt(2)))++slashCount;else {needsReplace=false;}}}}}
if(needsReplace){for(;slashCount<joined.length;++slashCount){if(!isPathSeparator(joined.charCodeAt(slashCount)))break;}
if(slashCount>=2)joined=\`\\\\\\\\\${joined.slice(slashCount)}\`;}
return normalize(joined);}
function relative(from,to){assertPath(from);assertPath(to);if(from===to)return \\"\\";const fromOrig=resolve(from);const toOrig=resolve(to);if(fromOrig===toOrig)return \\"\\";from=fromOrig.toLowerCase();to=toOrig.toLowerCase();if(from===to)return \\"\\";let fromStart=0;let fromEnd=from.length;for(;fromStart<fromEnd;++fromStart){if(from.charCodeAt(fromStart)!==92)break;}
for(;fromEnd-1>fromStart;--fromEnd){if(from.charCodeAt(fromEnd-1)!==92)break;}
const fromLen=fromEnd-fromStart;let toStart=0;let toEnd=to.length;for(;toStart<toEnd;++toStart){if(to.charCodeAt(toStart)!==92)break;}
for(;toEnd-1>toStart;--toEnd){if(to.charCodeAt(toEnd-1)!==92)break;}
const toLen=toEnd-toStart;const length=fromLen<toLen?fromLen:toLen;let lastCommonSep=-1;let i=0;for(;i<=length;++i){if(i===length){if(toLen>length){if(to.charCodeAt(toStart+i)===92){return toOrig.slice(toStart+i+1);}else if(i===2){return toOrig.slice(toStart+i);}}
if(fromLen>length){if(from.charCodeAt(fromStart+i)===92){lastCommonSep=i;}else if(i===2){lastCommonSep=3;}}
break;}
const fromCode=from.charCodeAt(fromStart+i);const toCode=to.charCodeAt(toStart+i);if(fromCode!==toCode)break;else if(fromCode===92)lastCommonSep=i;}
if(i!==length&&lastCommonSep===-1){return toOrig;}
let out=\\"\\";if(lastCommonSep===-1)lastCommonSep=0;for(i=fromStart+lastCommonSep+1;i<=fromEnd;++i){if(i===fromEnd||from.charCodeAt(i)===CHAR_BACKWARD_SLASH){if(out.length===0)out+=\\"..\\";else out+=\\"\\\\\\\\..\\";}}
if(out.length>0){return out+toOrig.slice(toStart+lastCommonSep,toEnd);}else {toStart+=lastCommonSep;if(toOrig.charCodeAt(toStart)===92)++toStart;return toOrig.slice(toStart,toEnd);}}
function toNamespacedPath(path){if(typeof path!==\\"string\\")return path;if(path.length===0)return \\"\\";const resolvedPath=resolve(path);if(resolvedPath.length>=3){if(resolvedPath.charCodeAt(0)===92){if(resolvedPath.charCodeAt(1)===92){const code=resolvedPath.charCodeAt(2);if(code!==63&&code!==CHAR_DOT){return \`\\\\\\\\\\\\\\\\?\\\\\\\\UNC\\\\\\\\\${resolvedPath.slice(2)}\`;}}}else if(isWindowsDeviceRoot(resolvedPath.charCodeAt(0))){if(resolvedPath.charCodeAt(1)===58&&resolvedPath.charCodeAt(2)===CHAR_BACKWARD_SLASH){return \`\\\\\\\\\\\\\\\\?\\\\\\\\\${resolvedPath}\`;}}}
return path;}
function dirname(path){assertPath(path);const len=path.length;if(len===0)return \\".\\";let rootEnd=-1;let end=-1;let matchedSlash=true;let offset=0;const code=path.charCodeAt(0);if(len>1){if(isPathSeparator(code)){rootEnd=offset=1;if(isPathSeparator(path.charCodeAt(1))){let j=2;let last=j;for(;j<len;++j){if(isPathSeparator(path.charCodeAt(j)))break;}
if(j<len&&j!==last){last=j;for(;j<len;++j){if(!isPathSeparator(path.charCodeAt(j)))break;}
if(j<len&&j!==last){last=j;for(;j<len;++j){if(isPathSeparator(path.charCodeAt(j)))break;}
if(j===len){return path;}
if(j!==last){rootEnd=offset=j+1;}}}}}else if(isWindowsDeviceRoot(code)){if(path.charCodeAt(1)===58){rootEnd=offset=2;if(len>2){if(isPathSeparator(path.charCodeAt(2)))rootEnd=offset=3;}}}}else if(isPathSeparator(code)){return path;}
for(let i=len-1;i>=offset;--i){if(isPathSeparator(path.charCodeAt(i))){if(!matchedSlash){end=i;break;}}else {matchedSlash=false;}}
if(end===-1){if(rootEnd===-1)return \\".\\";else end=rootEnd;}
return path.slice(0,end);}
function basename(path,ext=\\"\\"){if(ext!==undefined&&typeof ext!==\\"string\\"){throw new TypeError('\\"ext\\" argument must be a string');}
assertPath(path);let start=0;let end=-1;let matchedSlash=true;let i;if(path.length>=2){const drive=path.charCodeAt(0);if(isWindowsDeviceRoot(drive)){if(path.charCodeAt(1)===58)start=2;}}
if(ext!==undefined&&ext.length>0&&ext.length<=path.length){if(ext.length===path.length&&ext===path)return \\"\\";let extIdx=ext.length-1;let firstNonSlashEnd=-1;for(i=path.length-1;i>=start;--i){const code=path.charCodeAt(i);if(isPathSeparator(code)){if(!matchedSlash){start=i+1;break;}}else {if(firstNonSlashEnd===-1){matchedSlash=false;firstNonSlashEnd=i+1;}
if(extIdx>=0){if(code===ext.charCodeAt(extIdx)){if((--extIdx)===-1){end=i;}}else {extIdx=-1;end=firstNonSlashEnd;}}}}
if(start===end)end=firstNonSlashEnd;else if(end===-1)end=path.length;return path.slice(start,end);}else {for(i=path.length-1;i>=start;--i){if(isPathSeparator(path.charCodeAt(i))){if(!matchedSlash){start=i+1;break;}}else if(end===-1){matchedSlash=false;end=i+1;}}
if(end===-1)return \\"\\";return path.slice(start,end);}}
function extname(path){assertPath(path);let start=0;let startDot=-1;let startPart=0;let end=-1;let matchedSlash=true;let preDotState=0;if(path.length>=2&&path.charCodeAt(1)===CHAR_COLON&&isWindowsDeviceRoot(path.charCodeAt(0))){start=startPart=2;}
for(let i=path.length-1;i>=start;--i){const code=path.charCodeAt(i);if(isPathSeparator(code)){if(!matchedSlash){startPart=i+1;break;}
continue;}
if(end===-1){matchedSlash=false;end=i+1;}
if(code===46){if(startDot===-1)startDot=i;else if(preDotState!==1)preDotState=1;}else if(startDot!==-1){preDotState=-1;}}
if(startDot===-1||end===-1||preDotState===0||preDotState===1&&startDot===end-1&&startDot===startPart+1){return \\"\\";}
return path.slice(startDot,end);}
function format(pathObject){if(pathObject===null||typeof pathObject!==\\"object\\"){throw new TypeError(\`The \\"pathObject\\" argument must be of type Object. Received type \${typeof pathObject}\`);}
return _format(\\"\\\\\\\\\\",pathObject);}
function parse(path){assertPath(path);const ret={root:\\"\\",dir:\\"\\",base:\\"\\",ext:\\"\\",name:\\"\\"};const len=path.length;if(len===0)return ret;let rootEnd=0;let code=path.charCodeAt(0);if(len>1){if(isPathSeparator(code)){rootEnd=1;if(isPathSeparator(path.charCodeAt(1))){let j=2;let last=j;for(;j<len;++j){if(isPathSeparator(path.charCodeAt(j)))break;}
if(j<len&&j!==last){last=j;for(;j<len;++j){if(!isPathSeparator(path.charCodeAt(j)))break;}
if(j<len&&j!==last){last=j;for(;j<len;++j){if(isPathSeparator(path.charCodeAt(j)))break;}
if(j===len){rootEnd=j;}else if(j!==last){rootEnd=j+1;}}}}}else if(isWindowsDeviceRoot(code)){if(path.charCodeAt(1)===58){rootEnd=2;if(len>2){if(isPathSeparator(path.charCodeAt(2))){if(len===3){ret.root=ret.dir=path;return ret;}
rootEnd=3;}}else {ret.root=ret.dir=path;return ret;}}}}else if(isPathSeparator(code)){ret.root=ret.dir=path;return ret;}
if(rootEnd>0)ret.root=path.slice(0,rootEnd);let startDot=-1;let startPart=rootEnd;let end=-1;let matchedSlash=true;let i=path.length-1;let preDotState=0;for(;i>=rootEnd;--i){code=path.charCodeAt(i);if(isPathSeparator(code)){if(!matchedSlash){startPart=i+1;break;}
continue;}
if(end===-1){matchedSlash=false;end=i+1;}
if(code===46){if(startDot===-1)startDot=i;else if(preDotState!==1)preDotState=1;}else if(startDot!==-1){preDotState=-1;}}
if(startDot===-1||end===-1||preDotState===0||preDotState===1&&startDot===end-1&&startDot===startPart+1){if(end!==-1){ret.base=ret.name=path.slice(startPart,end);}}else {ret.name=path.slice(startPart,startDot);ret.base=path.slice(startPart,end);ret.ext=path.slice(startDot,end);}
if(startPart>0&&startPart!==rootEnd){ret.dir=path.slice(0,startPart-1);}else ret.dir=ret.root;return ret;}
function fromFileUrl(url){url=url instanceof URL?url:new URL(url);if(url.protocol!=\\"file:\\"){throw new TypeError(\\"Must be a file URL.\\");}
let path=decodeURIComponent(url.pathname.replace(/\\\\//g,\\"\\\\\\\\\\").replace(/%(?![0-9A-Fa-f]{2})/g,\\"%25\\")).replace(/^\\\\\\\\*([A-Za-z]:)(\\\\\\\\|$)/,\\"$1\\\\\\\\\\");if(url.hostname!=\\"\\"){path=\`\\\\\\\\\\\\\\\\\${url.hostname}\${path}\`;}
return path;}
function toFileUrl(path){if(!isAbsolute(path)){throw new TypeError(\\"Must be an absolute path.\\");}
const[,hostname,pathname]=path.match(/^(?:[/\\\\\\\\]{2}([^/\\\\\\\\]+)(?=[/\\\\\\\\][^/\\\\\\\\]))?(.*)/);const url=new URL(\\"file:///\\");url.pathname=pathname.replace(/%/g,\\"%25\\");if(hostname!=null){url.hostname=hostname;if(!url.hostname){throw new TypeError(\\"Invalid hostname.\\");}}
return url;}
return {sep,delimiter,resolve,normalize,isAbsolute,join,relative,toNamespacedPath,dirname,basename,extname,format,parse,fromFileUrl,toFileUrl};}();function assertPath(path){if(typeof path!==\\"string\\"){throw new TypeError(\`Path must be a string. Received \${JSON.stringify(path)}\`);}}
function isPosixPathSeparator(code){return code===47;}
function isPathSeparator(code){return isPosixPathSeparator(code)||code===CHAR_BACKWARD_SLASH;}
function isWindowsDeviceRoot(code){return code>=97&&code<=CHAR_LOWERCASE_Z||code>=CHAR_UPPERCASE_A&&code<=CHAR_UPPERCASE_Z;}
function normalizeString(path,allowAboveRoot,separator,isPathSeparator1){let res=\\"\\";let lastSegmentLength=0;let lastSlash=-1;let dots=0;let code;for(let i=0,len=path.length;i<=len;++i){if(i<len)code=path.charCodeAt(i);else if(isPathSeparator1(code))break;else code=47;if(isPathSeparator1(code)){if(lastSlash===i-1||dots===1);else if(lastSlash!==i-1&&dots===2){if(res.length<2||lastSegmentLength!==2||res.charCodeAt(res.length-1)!==CHAR_DOT||res.charCodeAt(res.length-2)!==CHAR_DOT){if(res.length>2){const lastSlashIndex=res.lastIndexOf(separator);if(lastSlashIndex===-1){res=\\"\\";lastSegmentLength=0;}else {res=res.slice(0,lastSlashIndex);lastSegmentLength=res.length-1-res.lastIndexOf(separator);}
lastSlash=i;dots=0;continue;}else if(res.length===2||res.length===1){res=\\"\\";lastSegmentLength=0;lastSlash=i;dots=0;continue;}}
if(allowAboveRoot){if(res.length>0)res+=\`\${separator}..\`;else res=\\"..\\";lastSegmentLength=2;}}else {if(res.length>0)res+=separator+path.slice(lastSlash+1,i);else res=path.slice(lastSlash+1,i);lastSegmentLength=i-lastSlash-1;}
lastSlash=i;dots=0;}else if(code===46&&dots!==-1){++dots;}else {dots=-1;}}
return res;}
function _format(sep,pathObject){const dir=pathObject.dir||pathObject.root;const base=pathObject.base||(pathObject.name||\\"\\")+(pathObject.ext||\\"\\");if(!dir)return base;if(dir===pathObject.root)return dir+base;return dir+sep+base;}
const _posix=function(){const sep=\\"/\\";const delimiter=\\":\\";function resolve(...pathSegments){let resolvedPath=\\"\\";let resolvedAbsolute=false;for(let i=pathSegments.length-1;i>=-1&&!resolvedAbsolute;i--){let path;if(i>=0)path=pathSegments[i];else {if(globalThis.Deno==null){throw new TypeError(\\"Resolved a relative path without a CWD.\\");}
path=Deno.cwd();}
assertPath(path);if(path.length===0){continue;}
resolvedPath=\`\${path}/\${resolvedPath}\`;resolvedAbsolute=path.charCodeAt(0)===47;}
resolvedPath=normalizeString(resolvedPath,!resolvedAbsolute,\\"/\\",isPosixPathSeparator);if(resolvedAbsolute){if(resolvedPath.length>0)return \`/\${resolvedPath}\`;else return \\"/\\";}else if(resolvedPath.length>0)return resolvedPath;else return \\".\\";}
function normalize(path){assertPath(path);if(path.length===0)return \\".\\";const isAbsolute=path.charCodeAt(0)===47;const trailingSeparator=path.charCodeAt(path.length-1)===47;path=normalizeString(path,!isAbsolute,\\"/\\",isPosixPathSeparator);if(path.length===0&&!isAbsolute)path=\\".\\";if(path.length>0&&trailingSeparator)path+=\\"/\\";if(isAbsolute)return \`/\${path}\`;return path;}
function isAbsolute(path){assertPath(path);return path.length>0&&path.charCodeAt(0)===CHAR_FORWARD_SLASH;}
function join(...paths){if(paths.length===0)return \\".\\";let joined;for(let i=0,len=paths.length;i<len;++i){const path=paths[i];assertPath(path);if(path.length>0){if(!joined)joined=path;else joined+=\`/\${path}\`;}}
if(!joined)return \\".\\";return normalize(joined);}
function relative(from,to){assertPath(from);assertPath(to);if(from===to)return \\"\\";from=resolve(from);to=resolve(to);if(from===to)return \\"\\";let fromStart=1;const fromEnd=from.length;for(;fromStart<fromEnd;++fromStart){if(from.charCodeAt(fromStart)!==47)break;}
const fromLen=fromEnd-fromStart;let toStart=1;const toEnd=to.length;for(;toStart<toEnd;++toStart){if(to.charCodeAt(toStart)!==47)break;}
const toLen=toEnd-toStart;const length=fromLen<toLen?fromLen:toLen;let lastCommonSep=-1;let i=0;for(;i<=length;++i){if(i===length){if(toLen>length){if(to.charCodeAt(toStart+i)===47){return to.slice(toStart+i+1);}else if(i===0){return to.slice(toStart+i);}}else if(fromLen>length){if(from.charCodeAt(fromStart+i)===47){lastCommonSep=i;}else if(i===0){lastCommonSep=0;}}
break;}
const fromCode=from.charCodeAt(fromStart+i);const toCode=to.charCodeAt(toStart+i);if(fromCode!==toCode)break;else if(fromCode===47)lastCommonSep=i;}
let out=\\"\\";for(i=fromStart+lastCommonSep+1;i<=fromEnd;++i){if(i===fromEnd||from.charCodeAt(i)===CHAR_FORWARD_SLASH){if(out.length===0)out+=\\"..\\";else out+=\\"/..\\";}}
if(out.length>0)return out+to.slice(toStart+lastCommonSep);else {toStart+=lastCommonSep;if(to.charCodeAt(toStart)===47)++toStart;return to.slice(toStart);}}
function toNamespacedPath(path){return path;}
function dirname(path){assertPath(path);if(path.length===0)return \\".\\";const hasRoot=path.charCodeAt(0)===47;let end=-1;let matchedSlash=true;for(let i=path.length-1;i>=1;--i){if(path.charCodeAt(i)===47){if(!matchedSlash){end=i;break;}}else {matchedSlash=false;}}
if(end===-1)return hasRoot?\\"/\\":\\".\\";if(hasRoot&&end===1)return \\"//\\";return path.slice(0,end);}
function basename(path,ext=\\"\\"){if(ext!==undefined&&typeof ext!==\\"string\\"){throw new TypeError('\\"ext\\" argument must be a string');}
assertPath(path);let start=0;let end=-1;let matchedSlash=true;let i;if(ext!==undefined&&ext.length>0&&ext.length<=path.length){if(ext.length===path.length&&ext===path)return \\"\\";let extIdx=ext.length-1;let firstNonSlashEnd=-1;for(i=path.length-1;i>=0;--i){const code=path.charCodeAt(i);if(code===47){if(!matchedSlash){start=i+1;break;}}else {if(firstNonSlashEnd===-1){matchedSlash=false;firstNonSlashEnd=i+1;}
if(extIdx>=0){if(code===ext.charCodeAt(extIdx)){if((--extIdx)===-1){end=i;}}else {extIdx=-1;end=firstNonSlashEnd;}}}}
if(start===end)end=firstNonSlashEnd;else if(end===-1)end=path.length;return path.slice(start,end);}else {for(i=path.length-1;i>=0;--i){if(path.charCodeAt(i)===47){if(!matchedSlash){start=i+1;break;}}else if(end===-1){matchedSlash=false;end=i+1;}}
if(end===-1)return \\"\\";return path.slice(start,end);}}
function extname(path){assertPath(path);let startDot=-1;let startPart=0;let end=-1;let matchedSlash=true;let preDotState=0;for(let i=path.length-1;i>=0;--i){const code=path.charCodeAt(i);if(code===47){if(!matchedSlash){startPart=i+1;break;}
continue;}
if(end===-1){matchedSlash=false;end=i+1;}
if(code===46){if(startDot===-1)startDot=i;else if(preDotState!==1)preDotState=1;}else if(startDot!==-1){preDotState=-1;}}
if(startDot===-1||end===-1||preDotState===0||preDotState===1&&startDot===end-1&&startDot===startPart+1){return \\"\\";}
return path.slice(startDot,end);}
function format(pathObject){if(pathObject===null||typeof pathObject!==\\"object\\"){throw new TypeError(\`The \\"pathObject\\" argument must be of type Object. Received type \${typeof pathObject}\`);}
return _format(\\"/\\",pathObject);}
function parse(path){assertPath(path);const ret={root:\\"\\",dir:\\"\\",base:\\"\\",ext:\\"\\",name:\\"\\"};if(path.length===0)return ret;const isAbsolute1=path.charCodeAt(0)===47;let start;if(isAbsolute1){ret.root=\\"/\\";start=1;}else {start=0;}
let startDot=-1;let startPart=0;let end=-1;let matchedSlash=true;let i=path.length-1;let preDotState=0;for(;i>=start;--i){const code=path.charCodeAt(i);if(code===47){if(!matchedSlash){startPart=i+1;break;}
continue;}
if(end===-1){matchedSlash=false;end=i+1;}
if(code===46){if(startDot===-1)startDot=i;else if(preDotState!==1)preDotState=1;}else if(startDot!==-1){preDotState=-1;}}
if(startDot===-1||end===-1||preDotState===0||preDotState===1&&startDot===end-1&&startDot===startPart+1){if(end!==-1){if(startPart===0&&isAbsolute1){ret.base=ret.name=path.slice(1,end);}else {ret.base=ret.name=path.slice(startPart,end);}}}else {if(startPart===0&&isAbsolute1){ret.name=path.slice(1,startDot);ret.base=path.slice(1,end);}else {ret.name=path.slice(startPart,startDot);ret.base=path.slice(startPart,end);}
ret.ext=path.slice(startDot,end);}
if(startPart>0)ret.dir=path.slice(0,startPart-1);else if(isAbsolute1)ret.dir=\\"/\\";return ret;}
function fromFileUrl(url){url=url instanceof URL?url:new URL(url);if(url.protocol!=\\"file:\\"){throw new TypeError(\\"Must be a file URL.\\");}
return decodeURIComponent(url.pathname.replace(/%(?![0-9A-Fa-f]{2})/g,\\"%25\\"));}
function toFileUrl(path){if(!isAbsolute(path)){throw new TypeError(\\"Must be an absolute path.\\");}
const url=new URL(\\"file:///\\");url.pathname=path.replace(/%/g,\\"%25\\").replace(/\\\\\\\\/g,\\"%5C\\");return url;}
return {sep,delimiter,resolve,normalize,isAbsolute,join,relative,toNamespacedPath,dirname,basename,extname,format,parse,fromFileUrl,toFileUrl};}();const path=isWindows?_win32:_posix;const{basename,delimiter,dirname,extname,format,fromFileUrl,isAbsolute,join,normalize,parse,relative,resolve,sep,toFileUrl,toNamespacedPath,}=path;function appendFile(pathOrRid,data,optionsOrCallback,callback){pathOrRid=pathOrRid instanceof URL?fromFileUrl(pathOrRid):pathOrRid;const callbackFn=optionsOrCallback instanceof Function?optionsOrCallback:callback;const options=optionsOrCallback instanceof Function?undefined:optionsOrCallback;if(!callbackFn){throw new Error(\\"No callback function supplied\\");}
validateEncoding(options);let rid=-1;const buffer=data instanceof Uint8Array?data:new TextEncoder().encode(data);new Promise((resolve1,reject)=>{if(typeof pathOrRid===\\"number\\"){rid=pathOrRid;Deno.write(rid,buffer).then(resolve1).catch(reject);}else {const mode=isFileOptions(options)?options.mode:undefined;const flag=isFileOptions(options)?options.flag:undefined;if(mode){notImplemented(\\"Deno does not yet support setting mode on create\\");}
Deno.open(pathOrRid,getOpenOptions(flag)).then(({rid:openedFileRid})=>{rid=openedFileRid;return Deno.write(openedFileRid,buffer);}).then(resolve1).catch(reject);}}).then(()=>{closeRidIfNecessary(typeof pathOrRid===\\"string\\",rid);callbackFn();}).catch((err)=>{closeRidIfNecessary(typeof pathOrRid===\\"string\\",rid);callbackFn(err);});}
function closeRidIfNecessary(isPathString,rid){if(isPathString&&rid!=-1){Deno.close(rid);}}
function appendFileSync(pathOrRid,data,options){let rid=-1;validateEncoding(options);pathOrRid=pathOrRid instanceof URL?fromFileUrl(pathOrRid):pathOrRid;try{if(typeof pathOrRid===\\"number\\"){rid=pathOrRid;}else {const mode=isFileOptions(options)?options.mode:undefined;const flag=isFileOptions(options)?options.flag:undefined;if(mode){notImplemented(\\"Deno does not yet support setting mode on create\\");}
const file=Deno.openSync(pathOrRid,getOpenOptions(flag));rid=file.rid;}
const buffer=data instanceof Uint8Array?data:new TextEncoder().encode(data);Deno.writeSync(rid,buffer);}finally{closeRidIfNecessary(typeof pathOrRid===\\"string\\",rid);}}
function validateEncoding(encodingOption){if(!encodingOption)return;if(typeof encodingOption===\\"string\\"){if(encodingOption!==\\"utf8\\"){throw new Error(\\"Only 'utf8' encoding is currently supported\\");}}else if(encodingOption.encoding&&encodingOption.encoding!==\\"utf8\\"){throw new Error(\\"Only 'utf8' encoding is currently supported\\");}}
const allowedModes=/^[0-7]{3}/;function chmod(path1,mode,callback){path1=path1 instanceof URL?fromFileUrl(path1):path1;Deno.chmod(path1,getResolvedMode(mode)).then(()=>callback()).catch(callback);}
function chmodSync(path1,mode){path1=path1 instanceof URL?fromFileUrl(path1):path1;Deno.chmodSync(path1,getResolvedMode(mode));}
function getResolvedMode(mode){if(typeof mode===\\"number\\"){return mode;}
if(typeof mode===\\"string\\"&&!allowedModes.test(mode)){throw new Error(\\"Unrecognized mode: \\"+mode);}
return parseInt(mode,8);}
function chown(path1,uid,gid,callback){path1=path1 instanceof URL?fromFileUrl(path1):path1;Deno.chown(path1,uid,gid).then(()=>callback()).catch(callback);}
function chownSync(path1,uid,gid){path1=path1 instanceof URL?fromFileUrl(path1):path1;Deno.chownSync(path1,uid,gid);}
function close(fd,callback){queueMicrotask(()=>{try{Deno.close(fd);callback(null);}catch(err){callback(err);}});}
function closeSync(fd){Deno.close(fd);}
const constants=function(){const F_OK=0;const R_OK=4;const W_OK=2;const X_OK=1;const S_IRUSR=256;const S_IWUSR=128;const S_IXUSR=64;const S_IRGRP=32;const S_IWGRP=16;const S_IXGRP=8;const S_IROTH=4;const S_IWOTH=2;const S_IXOTH=1;return {F_OK,R_OK,W_OK,X_OK,S_IRUSR,S_IWUSR,S_IXUSR,S_IRGRP,S_IWGRP,S_IXGRP,S_IROTH,S_IWOTH,S_IXOTH};}();const hextable=new TextEncoder().encode(\\"0123456789abcdef\\");function fromHexChar(byte){if(48<=byte&&byte<=57)return byte-48;if(97<=byte&&byte<=102)return byte-97+10;if(65<=byte&&byte<=70)return byte-65+10;throw errInvalidByte(byte);}
function encodedLen(n){return n*2;}
function encode(src){const dst=new Uint8Array(encodedLen(src.length));for(let i=0;i<dst.length;i++){const v=src[i];dst[i*2]=hextable[v>>4];dst[i*2+1]=hextable[v&15];}
return dst;}
function encodeToString(src){return new TextDecoder().decode(encode(src));}
function decode2(src){const dst=new Uint8Array(decodedLen(src.length));for(let i=0;i<dst.length;i++){const a=fromHexChar(src[i*2]);const b=fromHexChar(src[i*2+1]);dst[i]=a<<4|b;}
if(src.length%2==1){fromHexChar(src[dst.length*2]);throw errLength();}
return dst;}
function decodedLen(x){return x>>>1;}
function decodeString(s){return decode2(new TextEncoder().encode(s));}
const base64abc=[\\"A\\",\\"B\\",\\"C\\",\\"D\\",\\"E\\",\\"F\\",\\"G\\",\\"H\\",\\"I\\",\\"J\\",\\"K\\",\\"L\\",\\"M\\",\\"N\\",\\"O\\",\\"P\\",\\"Q\\",\\"R\\",\\"S\\",\\"T\\",\\"U\\",\\"V\\",\\"W\\",\\"X\\",\\"Y\\",\\"Z\\",\\"a\\",\\"b\\",\\"c\\",\\"d\\",\\"e\\",\\"f\\",\\"g\\",\\"h\\",\\"i\\",\\"j\\",\\"k\\",\\"l\\",\\"m\\",\\"n\\",\\"o\\",\\"p\\",\\"q\\",\\"r\\",\\"s\\",\\"t\\",\\"u\\",\\"v\\",\\"w\\",\\"x\\",\\"y\\",\\"z\\",\\"0\\",\\"1\\",\\"2\\",\\"3\\",\\"4\\",\\"5\\",\\"6\\",\\"7\\",\\"8\\",\\"9\\",\\"+\\",\\"/\\"];function encode1(data){const uint8=typeof data===\\"string\\"?new TextEncoder().encode(data):data instanceof Uint8Array?data:new Uint8Array(data);let result=\\"\\",i;const l=uint8.length;for(i=2;i<l;i+=3){result+=base64abc[uint8[i-2]>>2];result+=base64abc[(uint8[i-2]&3)<<4|uint8[i-1]>>4];result+=base64abc[(uint8[i-1]&15)<<2|uint8[i]>>6];result+=base64abc[uint8[i]&63];}
if(i===l+1){result+=base64abc[uint8[i-2]>>2];result+=base64abc[(uint8[i-2]&3)<<4];result+=\\"==\\";}
if(i===l){result+=base64abc[uint8[i-2]>>2];result+=base64abc[(uint8[i-2]&3)<<4|uint8[i-1]>>4];result+=base64abc[(uint8[i-1]&15)<<2];result+=\\"=\\";}
return result;}
function decode1(b64){const binString=atob(b64);const size=binString.length;const bytes=new Uint8Array(size);for(let i=0;i<size;i++){bytes[i]=binString.charCodeAt(i);}
return bytes;}
const notImplementedEncodings=[\\"ascii\\",\\"binary\\",\\"latin1\\",\\"ucs2\\",\\"utf16le\\",];function checkEncoding1(encoding=\\"utf8\\",strict=true){if(typeof encoding!==\\"string\\"||strict&&encoding===\\"\\"){if(!strict)return \\"utf8\\";throw new TypeError(\`Unkown encoding: \${encoding}\`);}
const normalized=normalizeEncoding(encoding);if(normalized===undefined){throw new TypeError(\`Unkown encoding: \${encoding}\`);}
if(notImplementedEncodings.includes(encoding)){notImplemented(\`\\"\${encoding}\\" encoding\`);}
return normalized;}
const encodingOps={utf8:{byteLength:(string)=>new TextEncoder().encode(string).byteLength},ucs2:{byteLength:(string)=>string.length*2},utf16le:{byteLength:(string)=>string.length*2},latin1:{byteLength:(string)=>string.length},ascii:{byteLength:(string)=>string.length},base64:{byteLength:(string)=>base64ByteLength(string,string.length)},hex:{byteLength:(string)=>string.length>>>1}};function base64ByteLength(str,bytes){if(str.charCodeAt(bytes-1)===61)bytes--;if(bytes>1&&str.charCodeAt(bytes-1)===61)bytes--;return bytes*3>>>2;}
class Buffer extends Uint8Array{static alloc(size,fill,encoding=\\"utf8\\"){if(typeof size!==\\"number\\"){throw new TypeError(\`The \\"size\\" argument must be of type number. Received type \${typeof size}\`);}
const buf=new Buffer(size);if(size===0)return buf;let bufFill;if(typeof fill===\\"string\\"){encoding=checkEncoding1(encoding);if(typeof fill===\\"string\\"&&fill.length===1&&encoding===\\"utf8\\"){buf.fill(fill.charCodeAt(0));}else bufFill=Buffer.from(fill,encoding);}else if(typeof fill===\\"number\\"){buf.fill(fill);}else if(fill instanceof Uint8Array){if(fill.length===0){throw new TypeError(\`The argument \\"value\\" is invalid. Received \${fill.constructor.name} []\`);}
bufFill=fill;}
if(bufFill){if(bufFill.length>buf.length){bufFill=bufFill.subarray(0,buf.length);}
let offset=0;while(offset<size){buf.set(bufFill,offset);offset+=bufFill.length;if(offset+bufFill.length>=size)break;}
if(offset!==size){buf.set(bufFill.subarray(0,size-offset),offset);}}
return buf;}
static allocUnsafe(size){return new Buffer(size);}
static byteLength(string,encoding=\\"utf8\\"){if(typeof string!=\\"string\\")return string.byteLength;encoding=normalizeEncoding(encoding)||\\"utf8\\";return encodingOps[encoding].byteLength(string);}
static concat(list,totalLength){if(totalLength==undefined){totalLength=0;for(const buf of list){totalLength+=buf.length;}}
const buffer=Buffer.allocUnsafe(totalLength);let pos=0;for(const item of list){let buf;if(!(item instanceof Buffer)){buf=Buffer.from(item);}else {buf=item;}
buf.copy(buffer,pos);pos+=buf.length;}
return buffer;}
static from(value,offsetOrEncoding,length){const offset=typeof offsetOrEncoding===\\"string\\"?undefined:offsetOrEncoding;let encoding=typeof offsetOrEncoding===\\"string\\"?offsetOrEncoding:undefined;if(typeof value==\\"string\\"){encoding=checkEncoding1(encoding,false);if(encoding===\\"hex\\")return new Buffer(decodeString(value).buffer);if(encoding===\\"base64\\")return new Buffer(decode1(value).buffer);return new Buffer(new TextEncoder().encode(value).buffer);}
return new Buffer(value,offset,length);}
static isBuffer(obj){return obj instanceof Buffer;}
static isEncoding(encoding){return typeof encoding===\\"string\\"&&encoding.length!==0&&normalizeEncoding(encoding)!==undefined;}
copy(targetBuffer,targetStart=0,sourceStart=0,sourceEnd=this.length){const sourceBuffer=this.subarray(sourceStart,sourceEnd).subarray(0,Math.max(0,targetBuffer.length-targetStart));if(sourceBuffer.length===0)return 0;targetBuffer.set(sourceBuffer,targetStart);return sourceBuffer.length;}
equals(otherBuffer){if(!(otherBuffer instanceof Uint8Array)){throw new TypeError(\`The \\"otherBuffer\\" argument must be an instance of Buffer or Uint8Array. Received type \${typeof otherBuffer}\`);}
if(this===otherBuffer)return true;if(this.byteLength!==otherBuffer.byteLength)return false;for(let i=0;i<this.length;i++){if(this[i]!==otherBuffer[i])return false;}
return true;}
readBigInt64BE(offset=0){return new DataView(this.buffer,this.byteOffset,this.byteLength).getBigInt64(offset);}
readBigInt64LE(offset=0){return new DataView(this.buffer,this.byteOffset,this.byteLength).getBigInt64(offset,true);}
readBigUInt64BE(offset=0){return new DataView(this.buffer,this.byteOffset,this.byteLength).getBigUint64(offset);}
readBigUInt64LE(offset=0){return new DataView(this.buffer,this.byteOffset,this.byteLength).getBigUint64(offset,true);}
readDoubleBE(offset=0){return new DataView(this.buffer,this.byteOffset,this.byteLength).getFloat64(offset);}
readDoubleLE(offset=0){return new DataView(this.buffer,this.byteOffset,this.byteLength).getFloat64(offset,true);}
readFloatBE(offset=0){return new DataView(this.buffer,this.byteOffset,this.byteLength).getFloat32(offset);}
readFloatLE(offset=0){return new DataView(this.buffer,this.byteOffset,this.byteLength).getFloat32(offset,true);}
readInt8(offset=0){return new DataView(this.buffer,this.byteOffset,this.byteLength).getInt8(offset);}
readInt16BE(offset=0){return new DataView(this.buffer,this.byteOffset,this.byteLength).getInt16(offset);}
readInt16LE(offset=0){return new DataView(this.buffer,this.byteOffset,this.byteLength).getInt16(offset,true);}
readInt32BE(offset=0){return new DataView(this.buffer,this.byteOffset,this.byteLength).getInt32(offset);}
readInt32LE(offset=0){return new DataView(this.buffer,this.byteOffset,this.byteLength).getInt32(offset,true);}
readUInt8(offset=0){return new DataView(this.buffer,this.byteOffset,this.byteLength).getUint8(offset);}
readUInt16BE(offset=0){return new DataView(this.buffer,this.byteOffset,this.byteLength).getUint16(offset);}
readUInt16LE(offset=0){return new DataView(this.buffer,this.byteOffset,this.byteLength).getUint16(offset,true);}
readUInt32BE(offset=0){return new DataView(this.buffer,this.byteOffset,this.byteLength).getUint32(offset);}
readUInt32LE(offset=0){return new DataView(this.buffer,this.byteOffset,this.byteLength).getUint32(offset,true);}
slice(begin=0,end=this.length){return this.subarray(begin,end);}
toJSON(){return {type:\\"Buffer\\",data:Array.from(this)};}
toString(encoding=\\"utf8\\",start=0,end=this.length){encoding=checkEncoding1(encoding);const b=this.subarray(start,end);if(encoding===\\"hex\\")return encodeToString(b);if(encoding===\\"base64\\")return encode1(b.buffer);return new TextDecoder(encoding).decode(b);}
write(string,offset=0,length=this.length){return new TextEncoder().encodeInto(string,this.subarray(offset,offset+length)).written;}
writeBigInt64BE(value,offset=0){new DataView(this.buffer,this.byteOffset,this.byteLength).setBigInt64(offset,value);return offset+4;}
writeBigInt64LE(value,offset=0){new DataView(this.buffer,this.byteOffset,this.byteLength).setBigInt64(offset,value,true);return offset+4;}
writeBigUInt64BE(value,offset=0){new DataView(this.buffer,this.byteOffset,this.byteLength).setBigUint64(offset,value);return offset+4;}
writeBigUInt64LE(value,offset=0){new DataView(this.buffer,this.byteOffset,this.byteLength).setBigUint64(offset,value,true);return offset+4;}
writeDoubleBE(value,offset=0){new DataView(this.buffer,this.byteOffset,this.byteLength).setFloat64(offset,value);return offset+8;}
writeDoubleLE(value,offset=0){new DataView(this.buffer,this.byteOffset,this.byteLength).setFloat64(offset,value,true);return offset+8;}
writeFloatBE(value,offset=0){new DataView(this.buffer,this.byteOffset,this.byteLength).setFloat32(offset,value);return offset+4;}
writeFloatLE(value,offset=0){new DataView(this.buffer,this.byteOffset,this.byteLength).setFloat32(offset,value,true);return offset+4;}
writeInt8(value,offset=0){new DataView(this.buffer,this.byteOffset,this.byteLength).setInt8(offset,value);return offset+1;}
writeInt16BE(value,offset=0){new DataView(this.buffer,this.byteOffset,this.byteLength).setInt16(offset,value);return offset+2;}
writeInt16LE(value,offset=0){new DataView(this.buffer,this.byteOffset,this.byteLength).setInt16(offset,value,true);return offset+2;}
writeInt32BE(value,offset=0){new DataView(this.buffer,this.byteOffset,this.byteLength).setUint32(offset,value);return offset+4;}
writeInt32LE(value,offset=0){new DataView(this.buffer,this.byteOffset,this.byteLength).setInt32(offset,value,true);return offset+4;}
writeUInt8(value,offset=0){new DataView(this.buffer,this.byteOffset,this.byteLength).setUint8(offset,value);return offset+1;}
writeUInt16BE(value,offset=0){new DataView(this.buffer,this.byteOffset,this.byteLength).setUint16(offset,value);return offset+2;}
writeUInt16LE(value,offset=0){new DataView(this.buffer,this.byteOffset,this.byteLength).setUint16(offset,value,true);return offset+2;}
writeUInt32BE(value,offset=0){new DataView(this.buffer,this.byteOffset,this.byteLength).setUint32(offset,value);return offset+4;}
writeUInt32LE(value,offset=0){new DataView(this.buffer,this.byteOffset,this.byteLength).setUint32(offset,value,true);return offset+4;}}
Object.defineProperty(globalThis,\\"Buffer\\",{value:Buffer,enumerable:false,writable:true,configurable:true});function maybeDecode(data,encoding){const buffer=new Buffer(data.buffer,data.byteOffset,data.byteLength);if(encoding&&encoding!==\\"binary\\")return buffer.toString(encoding);return buffer;}
function readFile(path1,optOrCallback,callback){path1=path1 instanceof URL?fromFileUrl(path1):path1;let cb;if(typeof optOrCallback===\\"function\\"){cb=optOrCallback;}else {cb=callback;}
const encoding=getEncoding(optOrCallback);const p=Deno.readFile(path1);if(cb){p.then((data)=>{if(encoding&&encoding!==\\"binary\\"){const text=maybeDecode(data,encoding);return cb(null,text);}
const buffer=maybeDecode(data,encoding);cb(null,buffer);}).catch((err)=>cb&&cb(err));}}
function readFileSync(path1,opt){path1=path1 instanceof URL?fromFileUrl(path1):path1;const data=Deno.readFileSync(path1);const encoding=getEncoding(opt);if(encoding&&encoding!==\\"binary\\"){const text=maybeDecode(data,encoding);return text;}
const buffer=maybeDecode(data,encoding);return buffer;}
function maybeEncode(data,encoding){if(encoding===\\"buffer\\"){return new TextEncoder().encode(data);}
return data;}
function getEncoding1(optOrCallback){if(!optOrCallback||typeof optOrCallback===\\"function\\"){return null;}else {if(optOrCallback.encoding){if(optOrCallback.encoding===\\"utf8\\"||optOrCallback.encoding===\\"utf-8\\"){return \\"utf8\\";}else if(optOrCallback.encoding===\\"buffer\\"){return \\"buffer\\";}else {notImplemented();}}
return null;}}
function readlink(path1,optOrCallback,callback){path1=path1 instanceof URL?fromFileUrl(path1):path1;let cb;if(typeof optOrCallback===\\"function\\"){cb=optOrCallback;}else {cb=callback;}
const encoding=getEncoding1(optOrCallback);intoCallbackAPIWithIntercept(Deno.readLink,(data)=>maybeEncode(data,encoding),cb,path1);}
function readlinkSync(path1,opt){path1=path1 instanceof URL?fromFileUrl(path1):path1;return maybeEncode(Deno.readLinkSync(path1),getEncoding1(opt));}
function exists(path1,callback){path1=path1 instanceof URL?fromFileUrl(path1):path1;Deno.lstat(path1).then(()=>{callback(true);}).catch(()=>callback(false));}
function existsSync(path1){path1=path1 instanceof URL?fromFileUrl(path1):path1;try{Deno.lstatSync(path1);return true;}catch(err){if(err instanceof Deno.errors.NotFound){return false;}
throw err;}}
function mkdir(path1,options,callback){path1=path1 instanceof URL?fromFileUrl(path1):path1;let mode=511;let recursive=false;if(typeof options==\\"function\\"){callback=options;}else if(typeof options===\\"number\\"){mode=options;}else if(typeof options===\\"boolean\\"){recursive=options;}else if(options){if(options.recursive!==undefined)recursive=options.recursive;if(options.mode!==undefined)mode=options.mode;}
if(typeof recursive!==\\"boolean\\"){throw new Deno.errors.InvalidData(\\"invalid recursive option , must be a boolean\\");}
Deno.mkdir(path1,{recursive,mode}).then(()=>{if(typeof callback===\\"function\\"){callback();}}).catch((err)=>{if(typeof callback===\\"function\\"){callback(err);}});}
function mkdirSync(path1,options){path1=path1 instanceof URL?fromFileUrl(path1):path1;let mode=511;let recursive=false;if(typeof options===\\"number\\"){mode=options;}else if(typeof options===\\"boolean\\"){recursive=options;}else if(options){if(options.recursive!==undefined)recursive=options.recursive;if(options.mode!==undefined)mode=options.mode;}
if(typeof recursive!==\\"boolean\\"){throw new Deno.errors.InvalidData(\\"invalid recursive option , must be a boolean\\");}
Deno.mkdirSync(path1,{recursive,mode});}
function copyFile(source,destination,callback){source=source instanceof URL?fromFileUrl(source):source;Deno.copyFile(source,destination).then(()=>callback()).catch(callback);}
function copyFileSync(source,destination){source=source instanceof URL?fromFileUrl(source):source;Deno.copyFileSync(source,destination);}
function writeFile(pathOrRid,data,optOrCallback,callback){const callbackFn=optOrCallback instanceof Function?optOrCallback:callback;const options=optOrCallback instanceof Function?undefined:optOrCallback;if(!callbackFn){throw new TypeError(\\"Callback must be a function.\\");}
pathOrRid=pathOrRid instanceof URL?fromFileUrl(pathOrRid):pathOrRid;const flag=isFileOptions(options)?options.flag:undefined;const mode=isFileOptions(options)?options.mode:undefined;const encoding=checkEncoding(getEncoding(options))||\\"utf8\\";const openOptions=getOpenOptions(flag||\\"w\\");if(typeof data===\\"string\\")data=Buffer.from(data,encoding);const isRid=typeof pathOrRid===\\"number\\";let file;let error=null;(async()=>{try{file=isRid?new Deno.File(pathOrRid):await Deno.open(pathOrRid,openOptions);if(!isRid&&mode){if(Deno.build.os===\\"windows\\")notImplemented(\`\\"mode\\" on Windows\`);await Deno.chmod(pathOrRid,mode);}
await Deno.writeAll(file,data);}catch(e){error=e;}finally{if(!isRid&&file)file.close();callbackFn(error);}})();}
function writeFileSync(pathOrRid,data,options){pathOrRid=pathOrRid instanceof URL?fromFileUrl(pathOrRid):pathOrRid;const flag=isFileOptions(options)?options.flag:undefined;const mode=isFileOptions(options)?options.mode:undefined;const encoding=checkEncoding(getEncoding(options))||\\"utf8\\";const openOptions=getOpenOptions(flag||\\"w\\");if(typeof data===\\"string\\")data=Buffer.from(data,encoding);const isRid=typeof pathOrRid===\\"number\\";let file;let error=null;try{file=isRid?new Deno.File(pathOrRid):Deno.openSync(pathOrRid,openOptions);if(!isRid&&mode){if(Deno.build.os===\\"windows\\")notImplemented(\`\\"mode\\" on Windows\`);Deno.chmodSync(pathOrRid,mode);}
Deno.writeAllSync(file,data);}catch(e){error=e;}finally{if(!isRid&&file)file.close();if(error)throw error;}}
class EventEmitter{static defaultMaxListeners=10;static errorMonitor=Symbol(\\"events.errorMonitor\\");constructor(){this._events=new Map();}
_addListener(eventName,listener,prepend){this.emit(\\"newListener\\",eventName,listener);if(this._events.has(eventName)){const listeners=this._events.get(eventName);if(prepend){listeners.unshift(listener);}else {listeners.push(listener);}}else {this._events.set(eventName,[listener]);}
const max=this.getMaxListeners();if(max>0&&this.listenerCount(eventName)>max){const warning=new Error(\`Possible EventEmitter memory leak detected.\\\\n         \${this.listenerCount(eventName)} \${eventName.toString()} listeners.\\\\n         Use emitter.setMaxListeners() to increase limit\`);warning.name=\\"MaxListenersExceededWarning\\";console.warn(warning);}
return this;}
addListener(eventName,listener){return this._addListener(eventName,listener,false);}
emit(eventName,...args){if(this._events.has(eventName)){if(eventName===\\"error\\"&&this._events.get(EventEmitter.errorMonitor)){this.emit(EventEmitter.errorMonitor,...args);}
const listeners=this._events.get(eventName).slice();for(const listener of listeners){try{listener.apply(this,args);}catch(err){this.emit(\\"error\\",err);}}
return true;}else if(eventName===\\"error\\"){if(this._events.get(EventEmitter.errorMonitor)){this.emit(EventEmitter.errorMonitor,...args);}
const errMsg=args.length>0?args[0]:Error(\\"Unhandled error.\\");throw errMsg;}
return false;}
eventNames(){return Array.from(this._events.keys());}
getMaxListeners(){return this.maxListeners||EventEmitter.defaultMaxListeners;}
listenerCount(eventName){if(this._events.has(eventName)){return this._events.get(eventName).length;}else {return 0;}}
_listeners(target,eventName,unwrap){if(!target._events.has(eventName)){return [];}
const eventListeners=target._events.get(eventName);return unwrap?this.unwrapListeners(eventListeners):eventListeners.slice(0);}
unwrapListeners(arr){const unwrappedListeners=new Array(arr.length);for(let i=0;i<arr.length;i++){unwrappedListeners[i]=arr[i][\\"listener\\"]||arr[i];}
return unwrappedListeners;}
listeners(eventName){return this._listeners(this,eventName,true);}
rawListeners(eventName){return this._listeners(this,eventName,false);}
off(eventName,listener){return this.removeListener(eventName,listener);}
on(eventName,listener){return this.addListener(eventName,listener);}
once(eventName,listener){const wrapped=this.onceWrap(eventName,listener);this.on(eventName,wrapped);return this;}
onceWrap(eventName,listener){const wrapper=function(...args){this.context.removeListener(this.eventName,this.rawListener);this.listener.apply(this.context,args);};const wrapperContext={eventName:eventName,listener:listener,rawListener:wrapper,context:this};const wrapped=wrapper.bind(wrapperContext);wrapperContext.rawListener=wrapped;wrapped.listener=listener;return wrapped;}
prependListener(eventName,listener){return this._addListener(eventName,listener,true);}
prependOnceListener(eventName,listener){const wrapped=this.onceWrap(eventName,listener);this.prependListener(eventName,wrapped);return this;}
removeAllListeners(eventName){if(this._events===undefined){return this;}
if(eventName){if(this._events.has(eventName)){const listeners=this._events.get(eventName).slice();this._events.delete(eventName);for(const listener of listeners){this.emit(\\"removeListener\\",eventName,listener);}}}else {const eventList=this.eventNames();eventList.map((value)=>{this.removeAllListeners(value);});}
return this;}
removeListener(eventName,listener){if(this._events.has(eventName)){const arr=this._events.get(eventName);assert(arr);let listenerIndex=-1;for(let i=arr.length-1;i>=0;i--){if(arr[i]==listener||arr[i]&&arr[i][\\"listener\\"]==listener){listenerIndex=i;break;}}
if(listenerIndex>=0){arr.splice(listenerIndex,1);this.emit(\\"removeListener\\",eventName,listener);if(arr.length===0){this._events.delete(eventName);}}}
return this;}
setMaxListeners(n){if(n!==Infinity){if(n===0){n=Infinity;}else {validateIntegerRange(n,\\"maxListeners\\",0);}}
this.maxListeners=n;return this;}}
function asyncIterableIteratorToCallback(iterator,callback){function next(){iterator.next().then((obj)=>{if(obj.done){callback(obj.value,true);return;}
callback(obj.value);next();});}
next();}
function asyncIterableToCallback(iter,callback){const iterator=iter[Symbol.asyncIterator]();function next(){iterator.next().then((obj)=>{if(obj.done){callback(obj.value,true);return;}
callback(obj.value);next();});}
next();}
function watch(filename,optionsOrListener,optionsOrListener2){const listener=typeof optionsOrListener===\\"function\\"?optionsOrListener:typeof optionsOrListener2===\\"function\\"?optionsOrListener2:undefined;const options=typeof optionsOrListener===\\"object\\"?optionsOrListener:typeof optionsOrListener2===\\"object\\"?optionsOrListener2:undefined;filename=filename instanceof URL?fromFileUrl(filename):filename;const iterator=Deno.watchFs(filename,{recursive:options?.recursive||false});if(!listener)throw new Error(\\"No callback function supplied\\");const fsWatcher=new FSWatcher(()=>{if(iterator.return)iterator.return();});fsWatcher.on(\\"change\\",listener);asyncIterableIteratorToCallback(iterator,(val,done)=>{if(done)return;fsWatcher.emit(\\"change\\",val.kind,val.paths[0]);});return fsWatcher;}
class FSWatcher extends EventEmitter{constructor(closer){super();this.close=closer;}
ref(){notImplemented(\\"FSWatcher.ref() is not implemented\\");}
unref(){notImplemented(\\"FSWatcher.unref() is not implemented\\");}}
class Dirent{constructor(entry){this.entry=entry;}
isBlockDevice(){notImplemented(\\"Deno does not yet support identification of block devices\\");return false;}
isCharacterDevice(){notImplemented(\\"Deno does not yet support identification of character devices\\");return false;}
isDirectory(){return this.entry.isDirectory;}
isFIFO(){notImplemented(\\"Deno does not yet support identification of FIFO named pipes\\");return false;}
isFile(){return this.entry.isFile;}
isSocket(){notImplemented(\\"Deno does not yet support identification of sockets\\");return false;}
isSymbolicLink(){return this.entry.isSymlink;}
get name(){return this.entry.name;}}
function toDirent(val){return new Dirent(val);}
function readdir(path1,optionsOrCallback,maybeCallback){const callback=typeof optionsOrCallback===\\"function\\"?optionsOrCallback:maybeCallback;const options=typeof optionsOrCallback===\\"object\\"?optionsOrCallback:null;const result=[];path1=path1 instanceof URL?fromFileUrl(path1):path1;if(!callback)throw new Error(\\"No callback function supplied\\");if(options?.encoding){try{new TextDecoder(options.encoding);}catch(error){throw new Error(\`TypeError [ERR_INVALID_OPT_VALUE_ENCODING]: The value \\"\${options.encoding}\\" is invalid for option \\"encoding\\"\`);}}
try{asyncIterableToCallback(Deno.readDir(path1),(val,done)=>{if(typeof path1!==\\"string\\")return;if(done){callback(undefined,result);return;}
if(options?.withFileTypes){result.push(toDirent(val));}else result.push(decode3(val.name));});}catch(error){callback(error,result);}}
function decode3(str,encoding){if(!encoding)return str;else {const decoder=new TextDecoder(encoding);const encoder=new TextEncoder();return decoder.decode(encoder.encode(str));}}
function readdirSync(path1,options){const result=[];path1=path1 instanceof URL?fromFileUrl(path1):path1;if(options?.encoding){try{new TextDecoder(options.encoding);}catch(error){throw new Error(\`TypeError [ERR_INVALID_OPT_VALUE_ENCODING]: The value \\"\${options.encoding}\\" is invalid for option \\"encoding\\"\`);}}
for(const file of Deno.readDirSync(path1)){if(options?.withFileTypes){result.push(toDirent(file));}else result.push(decode3(file.name));}
return result;}
function rename(oldPath,newPath,callback){oldPath=oldPath instanceof URL?fromFileUrl(oldPath):oldPath;newPath=newPath instanceof URL?fromFileUrl(newPath):newPath;if(!callback)throw new Error(\\"No callback function supplied\\");Deno.rename(oldPath,newPath).then((_)=>callback()).catch(callback);}
function renameSync(oldPath,newPath){oldPath=oldPath instanceof URL?fromFileUrl(oldPath):oldPath;newPath=newPath instanceof URL?fromFileUrl(newPath):newPath;Deno.renameSync(oldPath,newPath);}
function rmdir(path1,optionsOrCallback,maybeCallback){const callback=typeof optionsOrCallback===\\"function\\"?optionsOrCallback:maybeCallback;const options=typeof optionsOrCallback===\\"object\\"?optionsOrCallback:undefined;if(!callback)throw new Error(\\"No callback function supplied\\");Deno.remove(path1,{recursive:options?.recursive}).then((_)=>callback()).catch(callback);}
function rmdirSync(path1,options){Deno.removeSync(path1,{recursive:options?.recursive});}
function unlink(path1,callback){if(!callback)throw new Error(\\"No callback function supplied\\");Deno.remove(path1).then((_)=>callback()).catch(callback);}
function unlinkSync(path1){Deno.removeSync(path1);}
function existsSync1(filePath){try{Deno.lstatSync(filePath);return true;}catch(err){if(err instanceof Deno.errors.NotFound){return false;}
throw err;}}
const isWindows1=Deno.build.os==\\"windows\\";const isWindows2=Deno.build.os===\\"windows\\";var EOL;(function(EOL1){EOL1[\\"LF\\"]=\\"\\\\n\\";EOL1[\\"CRLF\\"]=\\"\\\\r\\\\n\\";})(EOL||(EOL={}));const existsSync2=existsSync1;function convertFlagAndModeToOptions(flag,mode){if(!flag&&!mode)return undefined;if(!flag&&mode)return {mode};return {...getOpenOptions(flag),mode};}
function open(path1,flagsOrCallback,callbackOrMode,maybeCallback){const flags=typeof flagsOrCallback===\\"string\\"?flagsOrCallback:undefined;const callback=typeof flagsOrCallback===\\"function\\"?flagsOrCallback:typeof callbackOrMode===\\"function\\"?callbackOrMode:maybeCallback;const mode=typeof callbackOrMode===\\"number\\"?callbackOrMode:undefined;path1=path1 instanceof URL?fromFileUrl(path1):path1;if(!callback)throw new Error(\\"No callback function supplied\\");if([\\"ax\\",\\"ax+\\",\\"wx\\",\\"wx+\\"].includes(flags||\\"\\")&&existsSync2(path1)){const err=new Error(\`EEXIST: file already exists, open '\${path1}'\`);callback(err,0);}else {if(flags===\\"as\\"||flags===\\"as+\\"){try{const res=openSync(path1,flags,mode);callback(undefined,res);}catch(error){callback(error,error);}
return;}
Deno.open(path1,convertFlagAndModeToOptions(flags,mode)).then((file)=>callback(undefined,file.rid)).catch((err)=>callback(err,err));}}
function openSync(path1,flagsOrMode,maybeMode){const flags=typeof flagsOrMode===\\"string\\"?flagsOrMode:undefined;const mode=typeof flagsOrMode===\\"number\\"?flagsOrMode:maybeMode;path1=path1 instanceof URL?fromFileUrl(path1):path1;if([\\"ax\\",\\"ax+\\",\\"wx\\",\\"wx+\\"].includes(flags||\\"\\")&&existsSync2(path1)){throw new Error(\`EEXIST: file already exists, open '\${path1}'\`);}
return Deno.openSync(path1,convertFlagAndModeToOptions(flags,mode)).rid;}
function convertFileInfoToStats(origin){return {dev:origin.dev,ino:origin.ino,mode:origin.mode,nlink:origin.nlink,uid:origin.uid,gid:origin.gid,rdev:origin.rdev,size:origin.size,blksize:origin.blksize,blocks:origin.blocks,mtime:origin.mtime,atime:origin.atime,birthtime:origin.birthtime,mtimeMs:origin.mtime?.getTime()||null,atimeMs:origin.atime?.getTime()||null,birthtimeMs:origin.birthtime?.getTime()||null,isFile:()=>origin.isFile,isDirectory:()=>origin.isDirectory,isSymbolicLink:()=>origin.isSymlink,isBlockDevice:()=>false,isFIFO:()=>false,isCharacterDevice:()=>false,isSocket:()=>false,ctime:origin.mtime,ctimeMs:origin.mtime?.getTime()||null};}
function toBigInt(number){if(number===null||number===undefined)return null;return BigInt(number);}
function convertFileInfoToBigIntStats(origin){return {dev:toBigInt(origin.dev),ino:toBigInt(origin.ino),mode:toBigInt(origin.mode),nlink:toBigInt(origin.nlink),uid:toBigInt(origin.uid),gid:toBigInt(origin.gid),rdev:toBigInt(origin.rdev),size:toBigInt(origin.size)||0n,blksize:toBigInt(origin.blksize),blocks:toBigInt(origin.blocks),mtime:origin.mtime,atime:origin.atime,birthtime:origin.birthtime,mtimeMs:origin.mtime?BigInt(origin.mtime.getTime()):null,atimeMs:origin.atime?BigInt(origin.atime.getTime()):null,birthtimeMs:origin.birthtime?BigInt(origin.birthtime.getTime()):null,mtimeNs:origin.mtime?BigInt(origin.mtime.getTime())*1000000n:null,atimeNs:origin.atime?BigInt(origin.atime.getTime())*1000000n:null,birthtimeNs:origin.birthtime?BigInt(origin.birthtime.getTime())*1000000n:null,isFile:()=>origin.isFile,isDirectory:()=>origin.isDirectory,isSymbolicLink:()=>origin.isSymlink,isBlockDevice:()=>false,isFIFO:()=>false,isCharacterDevice:()=>false,isSocket:()=>false,ctime:origin.mtime,ctimeMs:origin.mtime?BigInt(origin.mtime.getTime()):null,ctimeNs:origin.mtime?BigInt(origin.mtime.getTime())*1000000n:null};}
function CFISBIS(fileInfo,bigInt){if(bigInt)return convertFileInfoToBigIntStats(fileInfo);return convertFileInfoToStats(fileInfo);}
function stat(path1,optionsOrCallback,maybeCallback){const callback=typeof optionsOrCallback===\\"function\\"?optionsOrCallback:maybeCallback;const options=typeof optionsOrCallback===\\"object\\"?optionsOrCallback:{bigint:false};if(!callback)throw new Error(\\"No callback function supplied\\");Deno.stat(path1).then((stat1)=>callback(undefined,CFISBIS(stat1,options.bigint))).catch((err)=>callback(err,err));}
function statSync(path1,options={bigint:false}){const origin=Deno.statSync(path1);return CFISBIS(origin,options.bigint);}
function lstat(path1,optionsOrCallback,maybeCallback){const callback=typeof optionsOrCallback===\\"function\\"?optionsOrCallback:maybeCallback;const options=typeof optionsOrCallback===\\"object\\"?optionsOrCallback:{bigint:false};if(!callback)throw new Error(\\"No callback function supplied\\");Deno.lstat(path1).then((stat1)=>callback(undefined,CFISBIS(stat1,options.bigint))).catch((err)=>callback(err,err));}
function lstatSync(path1,options){const origin=Deno.lstatSync(path1);return CFISBIS(origin,options?.bigint||false);}
const promises=function(){function writeFile(pathOrRid,data,options){return new Promise((resolve1,reject)=>{writeFileCallback(pathOrRid,data,options,(err)=>{if(err)return reject(err);resolve1();});});}
function readFile(path1,options){return new Promise((resolve1,reject)=>{readFileCallback(path1,options,(err,data)=>{if(err)return reject(err);if(data==null){return reject(new Error(\\"Invalid state: data missing, but no error\\"));}
resolve1(data);});});}
return {writeFile,readFile}}();function realpath(path,options,callback){if(typeof options==='function'){callback=options;}
return Deno.realPath(path).then(rp=>callback(null,rp)).catch(err=>callback(err))}
function realpathSync(path){return Deno.realPathSync(path)}
var __fs = {access,accessSync,appendFile,appendFileSync,chmod,chmodSync,chown,chownSync,close,closeSync,constants,copyFile,copyFileSync,exists,existsSync,lstat,lstatSync,mkdir,mkdirSync,open,openSync,promises,readdir,readdirSync,readFile,readFileSync,readlink,readlinkSync,rename,realpath,realpathSync,renameSync,rmdir,rmdirSync,stat,statSync,unlink,unlinkSync,watch,writeFile,writeFileSync};

var process=window.process={};var cachedSetTimeout;var cachedClearTimeout;function defaultSetTimeout(){throw new Error('setTimeout has not been defined');}
function defaultClearTimeout(){throw new Error('clearTimeout has not been defined');}
(function(){try{if(typeof setTimeout==='function'){cachedSetTimeout=setTimeout;}else {cachedSetTimeout=defaultSetTimeout;}}catch(e){cachedSetTimeout=defaultSetTimeout;}
try{if(typeof clearTimeout==='function'){cachedClearTimeout=clearTimeout;}else {cachedClearTimeout=defaultClearTimeout;}}catch(e){cachedClearTimeout=defaultClearTimeout;}}());
function runTimeout(fun){if(cachedSetTimeout===setTimeout){return setTimeout(fun,0);}
if((cachedSetTimeout===defaultSetTimeout||!cachedSetTimeout)&&setTimeout){cachedSetTimeout=setTimeout;return setTimeout(fun,0);}
try{return cachedSetTimeout(fun,0);}catch(e){try{return cachedSetTimeout.call(null,fun,0);}catch(e){return cachedSetTimeout.call(this,fun,0);}}}
function runClearTimeout(marker){if(cachedClearTimeout===clearTimeout){return clearTimeout(marker);}
if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout){cachedClearTimeout=clearTimeout;return clearTimeout(marker);}
try{return cachedClearTimeout(marker);}catch(e){try{return cachedClearTimeout.call(null,marker);}catch(e){return cachedClearTimeout.call(this,marker);}}}
var queue=[];var draining=false;var currentQueue;var queueIndex=-1;function cleanUpNextTick(){if(!draining||!currentQueue){return;}
draining=false;if(currentQueue.length){queue=currentQueue.concat(queue);}else {queueIndex=-1;}
if(queue.length){drainQueue();}}
function drainQueue(){if(draining){return;}
var timeout=runTimeout(cleanUpNextTick);draining=true;var len=queue.length;while(len){currentQueue=queue;queue=[];while(++queueIndex<len){if(currentQueue){currentQueue[queueIndex].run();}}
queueIndex=-1;len=queue.length;}
currentQueue=null;draining=false;runClearTimeout(timeout);}
process.nextTick=function(fun){var args=new Array(arguments.length-1);if(arguments.length>1){for(var i=1;i<arguments.length;i++){args[i-1]=arguments[i];}}
queue.push(new Item(fun,args));if(queue.length===1&&!draining){runTimeout(drainQueue);}};function Item(fun,array){this.fun=fun;this.array=array;}
Item.prototype.run=function(){this.fun.apply(null,this.array);};process.title='browser';process.browser=true;process.env={};process.argv=[];process.version='';process.versions={};function noop(){}
process.on=noop;process.addListener=noop;process.once=noop;process.off=noop;process.removeListener=noop;process.removeAllListeners=noop;process.emit=noop;process.prependListener=noop;process.prependOnceListener=noop;process.listeners=function(name){return []};
process.binding=function(name){throw new Error('process.binding is not supported');};process.cwd=function(){return '/'};process.chdir=function(dir){throw new Error('process.chdir is not supported');};process.umask=function(){return 0;};

process.env.NODE_ENV=\\"production\\";var y=Object.create,m=Object.defineProperty,S=Object.getPrototypeOf,L=Object.prototype.hasOwnProperty,P=Object.getOwnPropertyNames,z=Object.getOwnPropertyDescriptor,_=l=>m(l,\\"__esModule\\",{value:!0}),D=(l,e)=>()=>(e||(e={exports:{}},l(e.exports,e)),e.exports),T=(l,e,r)=>{if(_(l),e&&typeof e==\\"object\\"||typeof e==\\"function\\")for(let i of P(e))!L.call(l,i)&&i!==\\"default\\"&&m(l,i,{get:()=>e[i],enumerable:!(r=z(e,i))||r.enumerable});return l},R=l=>l&&l.__esModule?l:T(m(l!=null?y(S(l)):{},\\"default\\",{value:l,enumerable:!0}),l),h=D((j,b)=>{function c(l){if(typeof l!=\\"string\\")throw new TypeError(\\"Path must be a string. Received \\"+JSON.stringify(l))}function C(l,e){for(var r=\\"\\",i=0,t=-1,s=0,n,f=0;f<=l.length;++f){if(f<l.length)n=l.charCodeAt(f);else {if(n===47)break;n=47;}if(n===47){if(!(t===f-1||s===1))if(t!==f-1&&s===2){if(r.length<2||i!==2||r.charCodeAt(r.length-1)!==46||r.charCodeAt(r.length-2)!==46){if(r.length>2){var a=r.lastIndexOf(\\"/\\");if(a!==r.length-1){a===-1?(r=\\"\\",i=0):(r=r.slice(0,a),i=r.length-1-r.lastIndexOf(\\"/\\")),t=f,s=0;continue}}else if(r.length===2||r.length===1){r=\\"\\",i=0,t=f,s=0;continue}}e&&(r.length>0?r+=\\"/..\\":r=\\"..\\",i=2);}else r.length>0?r+=\\"/\\"+l.slice(t+1,f):r=l.slice(t+1,f),i=f-t-1;t=f,s=0;}else n===46&&s!==-1?++s:s=-1;}return r}function E(l,e){var r=e.dir||e.root,i=e.base||(e.name||\\"\\")+(e.ext||\\"\\");return r?r===e.root?r+i:r+l+i:i}var g={resolve:function(){for(var e=\\"\\",r=!1,i,t=arguments.length-1;t>=-1&&!r;t--){var s;if(t>=0?s=arguments[t]:(i===void 0&&(i=process.cwd()),s=i),c(s),s.length===0)continue;e=s+\\"/\\"+e,r=s.charCodeAt(0)===47;}return e=C(e,!r),r?e.length>0?\\"/\\"+e:\\"/\\":e.length>0?e:\\".\\"},normalize:function(e){if(c(e),e.length===0)return \\".\\";var r=e.charCodeAt(0)===47,i=e.charCodeAt(e.length-1)===47;return e=C(e,!r),e.length===0&&!r&&(e=\\".\\"),e.length>0&&i&&(e+=\\"/\\"),r?\\"/\\"+e:e},isAbsolute:function(e){return c(e),e.length>0&&e.charCodeAt(0)===47},join:function(){if(arguments.length===0)return \\".\\";for(var e,r=0;r<arguments.length;++r){var i=arguments[r];c(i),i.length>0&&(e===void 0?e=i:e+=\\"/\\"+i);}return e===void 0?\\".\\":g.normalize(e)},relative:function(e,r){if(c(e),c(r),e===r)return \\"\\";if(e=g.resolve(e),r=g.resolve(r),e===r)return \\"\\";for(var i=1;i<e.length&&!(e.charCodeAt(i)!==47);++i);for(var t=e.length,s=t-i,n=1;n<r.length&&!(r.charCodeAt(n)!==47);++n);for(var f=r.length,a=f-n,v=s<a?s:a,u=-1,o=0;o<=v;++o){if(o===v){if(a>v){if(r.charCodeAt(n+o)===47)return r.slice(n+o+1);if(o===0)return r.slice(n+o)}else s>v&&(e.charCodeAt(i+o)===47?u=o:o===0&&(u=0));break}var A=e.charCodeAt(i+o),w=r.charCodeAt(n+o);if(A!==w)break;A===47&&(u=o);}var d=\\"\\";for(o=i+u+1;o<=t;++o)(o===t||e.charCodeAt(o)===47)&&(d.length===0?d+=\\"..\\":d+=\\"/..\\");return d.length>0?d+r.slice(n+u):(n+=u,r.charCodeAt(n)===47&&++n,r.slice(n))},_makeLong:function(e){return e},dirname:function(e){if(c(e),e.length===0)return \\".\\";for(var r=e.charCodeAt(0),i=r===47,t=-1,s=!0,n=e.length-1;n>=1;--n)if(r=e.charCodeAt(n),r===47){if(!s){t=n;break}}else s=!1;return t===-1?i?\\"/\\":\\".\\":i&&t===1?\\"//\\":e.slice(0,t)},basename:function(e,r){if(r!==void 0&&typeof r!=\\"string\\")throw new TypeError('\\"ext\\" argument must be a string');c(e);var i=0,t=-1,s=!0,n;if(r!==void 0&&r.length>0&&r.length<=e.length){if(r.length===e.length&&r===e)return \\"\\";var f=r.length-1,a=-1;for(n=e.length-1;n>=0;--n){var v=e.charCodeAt(n);if(v===47){if(!s){i=n+1;break}}else a===-1&&(s=!1,a=n+1),f>=0&&(v===r.charCodeAt(f)?--f===-1&&(t=n):(f=-1,t=a));}return i===t?t=a:t===-1&&(t=e.length),e.slice(i,t)}else {for(n=e.length-1;n>=0;--n)if(e.charCodeAt(n)===47){if(!s){i=n+1;break}}else t===-1&&(s=!1,t=n+1);return t===-1?\\"\\":e.slice(i,t)}},extname:function(e){c(e);for(var r=-1,i=0,t=-1,s=!0,n=0,f=e.length-1;f>=0;--f){var a=e.charCodeAt(f);if(a===47){if(!s){i=f+1;break}continue}t===-1&&(s=!1,t=f+1),a===46?r===-1?r=f:n!==1&&(n=1):r!==-1&&(n=-1);}return r===-1||t===-1||n===0||n===1&&r===t-1&&r===i+1?\\"\\":e.slice(r,t)},format:function(e){if(e===null||typeof e!=\\"object\\")throw new TypeError('The \\"pathObject\\" argument must be of type Object. Received type '+typeof e);return E(\\"/\\",e)},parse:function(e){c(e);var r={root:\\"\\",dir:\\"\\",base:\\"\\",ext:\\"\\",name:\\"\\"};if(e.length===0)return r;var i=e.charCodeAt(0),t=i===47,s;t?(r.root=\\"/\\",s=1):s=0;for(var n=-1,f=0,a=-1,v=!0,u=e.length-1,o=0;u>=s;--u){if(i=e.charCodeAt(u),i===47){if(!v){f=u+1;break}continue}a===-1&&(v=!1,a=u+1),i===46?n===-1?n=u:o!==1&&(o=1):n!==-1&&(o=-1);}return n===-1||a===-1||o===0||o===1&&n===a-1&&n===f+1?a!==-1&&(f===0&&t?r.base=r.name=e.slice(1,a):r.base=r.name=e.slice(f,a)):(f===0&&t?(r.name=e.slice(1,n),r.base=e.slice(1,a)):(r.name=e.slice(f,n),r.base=e.slice(f,a)),r.ext=e.slice(n,a)),f>0?r.dir=e.slice(0,f-1):t&&(r.dir=\\"/\\"),r},sep:\\"/\\",delimiter:\\":\\",win32:null,posix:null};g.posix=g;b.exports=g;}),k=R(h()),Z=k;

var require=name=>{switch(name){case \\"fs\\":return __fs;case \\"path-browserify\\":return Z;default:throw new Error(\\"[esm.sh] Could not resolve \\\\\\"\\"+name+\\"\\\\\\"\\");}};var p=Object.create,f=Object.defineProperty,c=Object.getPrototypeOf,d=Object.prototype.hasOwnProperty,v=Object.getOwnPropertyNames,q=Object.getOwnPropertyDescriptor,h$1=r=>f(r,\\"__esModule\\",{value:!0}),j=(r,e)=>()=>(e||(e={exports:{}},r(e.exports,e)),e.exports),g=(r,e,n)=>{if(h$1(r),e&&typeof e==\\"object\\"||typeof e==\\"function\\")for(let t of v(e))!d.call(r,t)&&t!==\\"default\\"&&f(r,t,{get:()=>e[t],enumerable:!(n=q(e,t))||n.enumerable});return r},y$1=r=>r&&r.__esModule?r:g(f(r!=null?p(c(r)):{},\\"default\\",{value:r,enumerable:!0}),r),s=j((w,o)=>{var z=require(\\"fs\\"),u=require(\\"path-browserify\\"),w=o.exports=function(r,e){var n={};return e=O(e||{},{lazy:!0}),z.readdirSync(r).forEach(function(t){if(t!==\\"index.js\\"&&t[0]!==\\".\\"){var i=u.basename(t,u.extname(t)),a=u.join(r,i);e.lazy?Object.defineProperty(n,i,{get:function(){return require(a)}}):n[i]=require(a);}}),n};function O(r,e){for(var n in e)e.hasOwnProperty(n)&&r[n]===void 0&&(r[n]=e[n]);return r}}),x=y$1(s()),E=x.default;

export default E;
"
`;

exports[`build with skypack 1`] = `
"var n, i, r;
function v(n2, l2, u2) {
  var i2, t2, o2, r2 = arguments, f2 = {};
  for (o2 in l2)
    o2 == \\"key\\" ? i2 = l2[o2] : o2 == \\"ref\\" ? t2 = l2[o2] : f2[o2] = l2[o2];
  if (arguments.length > 3)
    for (u2 = [u2], o2 = 3; o2 < arguments.length; o2++)
      u2.push(r2[o2]);
  if (u2 != null && (f2.children = u2), typeof n2 == \\"function\\" && n2.defaultProps != null)
    for (o2 in n2.defaultProps)
      f2[o2] === void 0 && (f2[o2] = n2.defaultProps[o2]);
  return h(n2, f2, i2, t2, null);
}
function h(l2, u2, i2, t2, o2) {
  var r2 = {type: l2, props: u2, key: i2, ref: t2, __k: null, __: null, __b: 0, __e: null, __d: void 0, __c: null, __h: null, constructor: void 0, __v: o2 == null ? ++n.__v : o2};
  return n.vnode != null && n.vnode(r2), r2;
}
n = {__e: function(n2, l2) {
  for (var u2, i2, t2, o2 = l2.__h; l2 = l2.__; )
    if ((u2 = l2.__c) && !u2.__)
      try {
        if ((i2 = u2.constructor) && i2.getDerivedStateFromError != null && (u2.setState(i2.getDerivedStateFromError(n2)), t2 = u2.__d), u2.componentDidCatch != null && (u2.componentDidCatch(n2), t2 = u2.__d), t2)
          return l2.__h = o2, u2.__E = u2;
      } catch (l3) {
        n2 = l3;
      }
  throw n2;
}, __v: 0}, i = typeof Promise == \\"function\\" ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, r = 0;

console.log(v);
"
`;
